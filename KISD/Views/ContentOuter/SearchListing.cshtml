@using PagedList
@using PagedList.Mvc;
@model KISD.Areas.Admin.Models.ContentModel
@{
    ViewBag.Title = !string.IsNullOrEmpty(Model.PageMetaTitleTxt) ? Model.PageMetaTitleTxt : "";
    ViewBag.MetaDescription = !string.IsNullOrEmpty(Model.PageMetaDescriptionTxt) ? Model.PageMetaDescriptionTxt : "";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var AppPath = (Request.IsSecureConnection ? "https://" : "http://") + (HttpContext.Current.Request.Url.DnsSafeHost) + (HttpContext.Current.Request.IsLocal ? (":" + HttpContext.Current.Request.Url.Port.ToString()) :
     (HttpContext.Current.Request.ApplicationPath.Length > 1 ? HttpContext.Current.Request.ApplicationPath : ""));
    var query = Request.QueryString["s"] != null ? Request.QueryString["s"].ToString() : "";
    AppPath = KISD.Areas.Admin.Models.Common.ReturnValidPath(AppPath);
    ViewBag.InnerImgPath = string.IsNullOrEmpty(ViewBag.InnerImgPath) ? "" : ViewBag.InnerImgPath;
    ViewBag.InnerImgTitleTxt = string.IsNullOrEmpty(ViewBag.InnerImgTitleTxt) ? "" : ViewBag.InnerImgTitleTxt;
}

@if (Model != null)
{
    <div class="@if (!string.IsNullOrEmpty(@ViewBag.InnerImgPath)) {<text>main-banner</text>} else {<text>no-inner-banner</text>}">
        @if (!string.IsNullOrEmpty(@ViewBag.InnerImgPath))
        {
            <img src="@ViewBag.InnerImgPath" class="banner_img" title="@ViewBag.InnerImgTitleTxt" alt="@Model.AltBannerImageTxt" />
            <div class="container">
                <div class="inner-banner-abstract">
                    @Html.Raw(Model.BannerImageAbstractTxt)
                </div>
            </div>
        }
    </div>
<div class="main-content">
    <div class="container">
        <div @if (Model.ParentRightSections.Count > 0 || Model.IsFacebookSharingInd 
                      || Model.IsGooglePlusSharingInd || Model.IsTwitterSharingInd
                      || !string.IsNullOrEmpty(Model.RightSectionTitleTxt) 
                      || !string.IsNullOrEmpty(Model.RightSectionAbstractTxt))
            { @Html.Raw("class='main-left'")    ;
            }>
            <div class="content">
                
                <h1 class="campus-news-title">@Html.Raw(Model.PageTitleTxt)</h1>
                <div class="breadcrumb">
                    <a href="@AppPath" title="Home Page">Home</a>
                    <span class="breaddiv">
                    </span><span id="lblBreadCrumb">@Html.Raw(Model.PageTitleTxt)</span>
                </div>

                @if (Model != null)
                {
                    if (!string.IsNullOrEmpty(Model.DescriptionTxt))
                    {
                        <p> @Html.Raw(Model.DescriptionTxt)</p>
                    }
                }

                <div class="content">
                    @if (Model.SearchAllResult != null && Model.SearchAllResult.Count > 0)
                    {
                        if (!string.IsNullOrEmpty(Request.QueryString["s"]))
                        {
                            @Html.Raw("<p><span class='padding10'> Following results are found for the keyword '" + @query + "'.</span></p>")

                            <ul class="search-result">
                                @foreach (var item in Model.SearchAllResult)
                                {
                                    <li>
                                        <h2><a href="@if (!item.IsExternalLink.Value) {  @AppPath<text>/</text>@item.URLTxt.Trim(); } else { @item.URLTxt.Trim(); } " target="_blank">@item.MenuTitleTxt</a></h2>
                                        <div>
                                            @if (!string.IsNullOrEmpty(item.Description))
                                            {
                                                @Html.Raw("<p>" + System.Text.RegularExpressions.Regex.Replace(item.Description, @"<[^>]+>|&nbsp;", "").Trim() + "</p>")
                                            }
                                        </div>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <br />
                            @Html.Raw("<p><span class='padding10'>Please try with another keywords for better results.</span></p>")
                            <br />
                        }
                    }
                    else
                    {
                        if (Request.QueryString["s"] != null)
                        {
                            <br />
                            @Html.Raw("<p><span class='padding10'> 0 results found for the keyword '" + @query + "'. Please try with another keywords for better results.</span></p>")
                            <br />
                        }
                        else
                        {
                            <br />
                            @Html.Raw("<p><span class='padding10'>Please try with another keywords for better results.</span></p>")
                            <br />
                        }
                    }
                </div>
            </div>
            @if (Model.IsPagingVisible && Model.SearchAllResult.PageCount > 1 && !string.IsNullOrEmpty(Request.QueryString["s"]))
                {
                <br />
                    <div class="pagination">
                        @Html.PagedListPager(Model.SearchAllResult, page => Url.Action("content", new { page, s = Request.QueryString["s"] != null ? Request.QueryString["s"].ToString() : "" }))
                    </div>
            }
        </div>

        @*Right Section*@
        @{Html.RenderAction("RightSection", "ContentOuter", new { ListingID = Model.ContentID, ModuleType = "Content" });}
    </div>
	</div>
}

