@using KISD.Areas.Admin.Models;
@model BoardMembersModel
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var _bmid = Request.QueryString["bmid"] != null ? Request.QueryString["bmid"] : EncryptDecrypt.Encrypt("0");
    var PageSize = Request.QueryString["pagesize"] ?? "10";
    var TypeMasterID = Request.QueryString["tmi"] != null ? Request.QueryString["tmi"].ToString() : EncryptDecrypt.Encrypt("0");
    var Page = Request.QueryString["page"] ?? "1";
    var Column = Request.QueryString["Column"] ?? "PageTitleTxt";
    var Direction = Request.QueryString["Direction"] ?? "Ascending";
    var AppPath = (Request.IsSecureConnection ? "https://" : "http://") +
                  (HttpContext.Current.Request.Url.DnsSafeHost) + (HttpContext.Current.Request.IsLocal ?
                  (":" + HttpContext.Current.Request.Url.Port.ToString()) : "") + "/Admin/";
    AppPath = Common.ReturnValidPath(AppPath);
}

@using (Html.BeginForm("Create", "BoardMembers", new
{
    bmid = _bmid,
    pagesize = PageSize,
    page = Page,
    Column = Column,
    Direction = Direction
},
                            FormMethod.Post, new { id = "form1", name = "form1", enctype = "multipart/form-data" }))
{
    <div class="breadcrumb">
        <ul>
            <li>
                <i class="icon-th"></i>
                <a id="ankdahboard" href='@Url.Action("Index", "Home")'>Dashboard</a>
            </li>
            <li>
                <a id="ankdahboardli" href='@Url.Action("Index", "BoardMembers")'>@ViewBag.LiTitle</a>
            </li>
            <li>
                @if (Model.BoardMemberID != 0)
                {
                    @Model.NameTxt @Html.Raw("-")
                }
                @Html.Raw(Convert.ToString(@ViewBag.PageTitle))
            </li>
        </ul>
    </div>
    <div class="wrapper">
        <!-- Wrapper -->
        <div class="widget">
            <!-- widget -->
            <div class="widget-header">
                <!-- widget-header -->
                <h4>
                    <i class="icon-reorder"></i>
                    @Html.Raw(Convert.ToString(@ViewBag.PageTitle))
                </h4>
                <div class="btn-group">
                    <a href='@Url.Action("Index", "BoardMembers", new
                            {
                                pagesize = Request.QueryString["pagesize"] ?? "10",
                                page = Request.QueryString["page"] ?? "1",
                                Column = Request.QueryString["Column"] ?? "CreateDate",
                                Direction = Request.QueryString["Direction"] ?? "Descending"
                            })'>
                        <i class="icon-arrow-left"></i>Back
                    </a>
                </div>
            </div>

            @if (Model != null)
            {
                <div class="row">
                    <div class="col20">
                        <label>
                            Image:<span class="requiredstar">*</span>
                        </label>
                    </div>
                    <div class="col40">
                        <input type="file" value="" accept=".jpg,.jpeg,.png,.gif"
                        @if (Model != null && !string.IsNullOrEmpty(Model.ImageURLTxt))
                        { <text> class="cropedfileupload" name="imageupload" id="imageupload" </text>               }
                        else
                        { <text> class="fileinput required cropedfileupload" id="ImagePathTxt" name="ImagePathTxt" </text> } />
                        <span class="fontsize">
                            <text>Ideal image size is 400px * 400px.Only JPG/ JPEG/ GIF/ PNG files are allowed and maximum image size is 4 MB.</text>
                        </span>
                        <span class="field-validation-error" style="display: none;" id="input_file_upload_error_img">This field is required.</span>
                        @Html.ValidationMessageFor(m => m.ImageURLTxt, null, new { @id = "err_ImagePathTxt" })
                        <br />
                        @if (Model != null && !string.IsNullOrEmpty(Model.ImageURLTxt))
                        {
                            <div id="modelimage">
                                @Html.Raw(string.Format("<text><img src=\"{0}\" alt=\"Image\" height=\"60px\"  width=\"100px\" /></text>", Url.Content(@Href(Model.ImageURLTxt).Replace("images", "thumbnails_small"))))
                            </div>
                        }
                    </div>
                </div>

                <div class="row">
                    <div class="col20">
                        <label>
                            Name:<span class="requiredstar">*</span>
                        </label>
                    </div>
                    <div class="col40">
                        @Html.TextBoxFor(m => m.NameTxt, new { @class = "required", maxlength = "200", @placeholder = "Maximum 200 characters" })
                        <br />
                        @Html.ValidationMessageFor(m => m.NameTxt)
                    </div>
                </div>

                    <div class="row">
                        <div class="col20">
                            <label>
                                Title:<span class="requiredstar">*</span>
                            </label>
                        </div>
                        <div class="col40">
                            @Html.TextBoxFor(m => m.TitleTxt, new { @class = "required", maxlength = "100", @placeholder = "Maximum 100 characters" })
                            <br />
                            @Html.ValidationMessageFor(m => m.TitleTxt)
                        </div>
                    </div>

                    <div class="row">
                        <div class="col20">
                            <label>
                                Page URL:<span class="requiredstar">*</span>
                            </label>
                        </div>
                        <div class="col40">
                            @Html.TextBoxFor(m => m.URLTxt, new { @class = "required alphanumeric nospace", maxlength = "100", @placeholder = "Maximum 100 characters" })
                            <br />
                            @Html.ValidationMessageFor(m => m.URLTxt)
                        </div>
                    </div>

                    <div class="row">
                        <div class="col20">
                            <label>
                                Contact Information:<span class="requiredstar">*</span>
                            </label>
                        </div>
                        <div class="col40">
                            @Html.TextAreaFor(m => m.ContactInfoTxt, new { @class = "required", maxlength = "200", @placeholder = "Maximum 200 characters" })
                            @Html.ValidationMessageFor(m => m.ContactInfoTxt)
                        </div>
                    </div>

                    <div class="row">
                        <div class="col20">
                            <label>
                                Term:<span class="requiredstar">*</span>
                            </label>
                        </div>
                        <div class="col40">
                            @Html.TextBoxFor(m => m.TermTxt, new { @class = "required", maxlength = "200", @placeholder = "Maximum 200 characters" })
                            @Html.ValidationMessageFor(m => m.TermTxt)
                        </div>
                    </div>

                    <div class="common-fieldset metatitle">
                        <span>Banner Image</span>
                        <div class="row metatitle">
                            <div class="col20">
                                <label>
                                    Inner Image:
                                </label>
                            </div>
                            <div class="col40">
                                @{
                                    var list = new SelectList(ViewBag.InnerImagesTitle, "ImageID", "TitleTxt");
                                }
                                @Html.DropDownListFor(m => m.BannerImageID, list as SelectList, "--- Select Inner Image ---", new { @class = "ddl", onchange = "ddlInnerImagesChange(this.value)", @name = "ddlInnerImages" })
                                <span id="ImageIDErrmsg" style="color:#C30; font-size:12px; font-family:Arial,sans-serif; display:none;">This field is required.</span>
                            </div>
                        </div>

                        <div class="row metatitle">
                            <div class="col20">
                                <label>
                                    Alt Image Text:
                                </label>
                            </div>
                            <div class="col40">
                                @Html.TextBoxFor(m => m.AltBannerImageTxt, new { maxlength = "1000", @placeholder = "Maximum 1000 characters", @class = "clsAltImgTxt common-width", @id = "AltImgTxt" })
                                <br />
                            </div>
                        </div>

                        <div class="row metatitle">
                            <div class="col20">
                                <label>
                                    Banner Image Abstract:
                                </label>
                            </div>
                            <div class="col75" id="tdCkEditor">
                                @Html.TextAreaFor(m => m.BannerImageAbstractTxt, new { @class = "AbstractTxt common-width", id = "AbstractTxtInner", name = "AbstractTxt" })
                            </div>
                        </div>

                    </div>

                    <div class="row metatitle">
                        <div class="col20">
                            <label>
                                @Html.Raw("Description:")
                            </label>
                        </div>
                        <div class="col75">
                            @Html.TextAreaFor(m => m.DescriptionTxt, new { @class = "ckeditor", @id = "ckDescriptionTxt", htmlEncodeOutput = true })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col20">
                            <label>
                                Status:<span class="requiredstar">*</span>
                            </label>
                        </div>
                        <div class="col40">
                            <div class="select-style">
                                @Html.DropDownList("IsActiveInd", ViewBag.IsActiveInd as SelectList)
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col20">
                            <label>
                                Date Added:<span class="requiredstar">*</span>
                            </label>
                        </div>
                        <div class="col40">
                            @Html.TextBoxFor(m => m.strBOMCreateDate, new { @class = "required nospace datepicker", maxlength = "10", @readonly = true, @placeholder = "MM/DD/YYYY", ondrop = "return false;", onpaste = "return false;" })
                            <br />
                            @Html.ValidationMessageFor(m => m.BOMCreateDate)
                        </div>
                    </div>

                    <div class="row metatitle">
                        <div class="col20">
                            <label>
                                Page Meta Title:<span class="requiredstar">*</span>
                            </label>
                        </div>
                        <div class="col40">
                            @Html.TextBoxFor(m => m.PageMetaTitleTxt, new { @class = "required", maxlength = "1000", @placeholder = "Maximum 1000 characters" })
                            <br />
                            @Html.ValidationMessageFor(m => m.PageMetaTitleTxt)
                        </div>
                    </div>

                    <div class="row metatitle">
                        <div class="col20">
                            <label>
                                Meta Description:
                            </label>
                        </div>
                        <div class="col40">
                            @Html.TextAreaFor(m => m.PageMetaDescriptionTxt, new { maxlength = "2000", @placeholder = "Maximum 2000 characters" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col20">&nbsp;</div>
                        <div class="col40">

                            @Html.HiddenFor(m => m.BoardMemberID)
                            <input type="hidden" value="400px" id="CropimgHeight">
                            <input type="hidden" value="400px" id="CropimgWidth">

                            <input type="submit" value="@ViewBag.Submit" id="btnsubmit"
                                   class="submit-btn submit" />&nbsp;&nbsp;&nbsp;

                            <input type="submit" id="btnCancel" name="command" value="Cancel"
                                   class="cancel cancel-btn" />
                        </div>
                    </div>
            }
        </div>
    </div>
}

<script src="~/Scripts/js/jquery-1.10.2.js" type="text/javascript"></script>
<script src="~/Scripts//js/jquery-ui-1.11.2.min.js"></script>
<script src="~/Scripts/js/jquery.validate.js" type="text/javascript"></script>
<script src="~/Scripts/js/jquery.validate.unobtrusive.js" type="text/javascript"></script>
<script src="~/Scripts/js/additional-methods.js"></script>
<script src="~/Scripts/js/Fileuploder.js"></script>
<script src="~/Scripts/js/ckeditor/ckeditor.js"></script>
<script src="~/Scripts/js/fancybox/jquery.fancybox.js" type="text/javascript"></script>
<link href="~/Scripts/admin/css/jquery.fancybox.css" rel="stylesheet" />
<link href="~/Scripts/admin/css/jquery.datetimepicker.min.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/js/jquery.datetimepicker.full.min.js"></script>
<script type="text/javascript" src="@Href("~/Scripts/js/ckfinder/ckfinder.js")"></script>

<script type="text/javascript">
    $("#ankSchoolBoard").addClass('select');
    $('#ankBoardMembers').addClass('select');
    $('#ankBoardMembersListing').addClass('select');

    if ($("#ckDescriptionTxt").length != 0) {
        var editor = CKEDITOR.replace('ckDescriptionTxt');
        CKFinder.setupCKEditor(editor, { basePath: '@Href("~/Scripts/js/ckfinder/")', rememberLastFolder: false })
        CKEDITOR.config.allowedContent = true;
        CKEDITOR.editorConfig = function (config) {
            config.filebrowserImageUploadUrl = '@Href("~/Scripts/js/ckfinder/core/connector/aspx/connector.aspx?command=QuickUpload&type=Images")';
        };
    }
    var nospace = $(".nospace");
    var funcfb = function () {
        $(this).val($(this).val().replace(/\s/g, ''));
    }
    if (nospace != null && nospace.length > 0) {
        nospace.keyup(funcfb).blur(funcfb);
    }
    $('#NameTxt').on('change keyup', function () {
        var url = this.value;
        $.ajax({
            url: '@(Url.Action("CheckURL"))',
            type: 'POST',
            data: JSON.stringify({ url: url.replace(/[\W_]/g, '_') }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                if (data != "" || data != null) {
                    $("#URLTxt").val(data.toString().toLowerCase());
                }
            }
        });
    });
    function ddlInnerImagesChange(value) {
        if (value == '') {
            CKEDITOR.instances['AbstractTxtInner'].setData('');
            $('#AltImgTxt').val('');
        }
        else {
            $.ajax({
                url: '@AppPath' + 'Menu/GetDataForInnerImages',
                data: { ImgId: value },
                type: 'Get',
                success: function (result) {
                    CKEDITOR.instances['AbstractTxtInner'].setData(result.AbstractTxt);
                    $('#AltImgTxt').val(result.AltImageTxt);
                    return false;
                },
                onerror: function () {
                }
            });
        }
    }
</script>

<script type="text/javascript">
    $(function () {
        $('.datepicker').datepicker(
            {
                changeMonth: true,
                changeYear: true,
                yearRange: (new Date().getFullYear() - 10).toString() + ':' + (new Date().getFullYear() + 10).toString()
            });
    });

    if ($("#tdCkEditor").length != 0) {
        CKEDITOR.replace('BannerImageAbstractTxt',
           {
               toolbar: 'Basic',
               BasePath: '@Href("~/Scripts/js/ckeditor/'")'
        });
    CKEDITOR.config.allowedContent = true;
    }
</script>

@Html.Partial("_CropPartial")