@using System.Web.Mvc;
@using KISD.Areas.Admin.Models;
@model UsersModel
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var AlertTitle = TempData["Message"] ?? string.Empty;
    var ListingID = Request.QueryString["UID"] == null ? ViewBag.UserID.ToString() : Request.QueryString["UID"].ToString();
    var PageSize = Request.QueryString["pagesize"] != null ? Request.QueryString["pagesize"].ToString() : Common._pageSize.ToString();
    var Page = Request.QueryString["page"] != null ? Request.QueryString["page"].ToString() : Common._currentPage.ToString();
    var Column = Request.QueryString["Column"] != null ? Request.QueryString["Column"].ToString() : "UserCreateDate";
    var Direction = Request.QueryString["Direction"] != null ? Request.QueryString["Direction"].ToString() : "Descending";
    var AppPath = (Request.IsSecureConnection ? "https://" : "http://") + (HttpContext.Current.Request.Url.DnsSafeHost) + (HttpContext.Current.Request.IsLocal ? (":" + HttpContext.Current.Request.Url.Port.ToString()) : "")
                   + "/Admin/UsersManagement/Index?page=1&Column=" + Column + "&Direction=" + Direction + "&pagesize=";
    AppPath = Common.ReturnValidPath(AppPath);
    var UserTypeID = ViewBag.UserTypeID != null ? ViewBag.UserTypeID : 0;
    var CancelLinkPath = (Request.IsSecureConnection ? "https://" : "http://") + (HttpContext.Current.Request.Url.DnsSafeHost) + (HttpContext.Current.Request.IsLocal ? (":" + HttpContext.Current.Request.Url.Port.ToString()) : "")
           + "/Admin/UsersManagement/Create?UID=" + ListingID;
    CancelLinkPath = Common.ReturnValidPath(CancelLinkPath);
}

@using (Html.BeginForm("Create", "UsersManagement", new
{
    UID = ListingID,
    pagesize = PageSize,
    page = Page,
    Column = Column,
    Direction = Direction
} , FormMethod.Post, new { id = "form1", name = "form1", enctype = "multipart/form-data" }))
{
    <div class="breadcrumb">
        <!-- Breadcrumb -->
        <ul>
            <li>
                <i class="icon-th"></i>
                <a id="ankdahboard" href='@Url.Action("Index", "Home")'>Dashboard</a>
            </li>
            <li>
                <a id="ankMasterListing" href='@Url.Action("Index", "UsersManagement",
                     new
                     {
                         UserID = ListingID,
                         pagesize = PageSize,
                         page = Page,
                         Column = Column,
                         Direction = Direction,
                     }
                         )'>

                    <text>
                        User Listing
                    </text>
                </a>
            </li>
            <li>
                @ViewBag.PageTitle
            </li>
        </ul>
    </div>
    <div class="wrapper">
        <!-- Wrapper -->
        <div class="widget">
            <!-- widget -->
            <div class="widget-header">
                <!-- widget-header -->
                <h4>
                    <i class="icon-reorder"></i>@ViewBag.PageTitle
                </h4>

                <div class="btn-group">
                    <a id="ankback" href='@Url.Action("Index", "UsersManagement",
                     new
                     {
                         UserID = ListingID,
                         pagesize = PageSize,
                         page = Page,
                         Column = Column,
                         Direction = Direction,
                     }
                )'>
                        <i class="icon-arrow-left"></i>Back
                    </a>
                </div>
            </div>

            <div class="row">
                <div class="col20">
                    <label>
                        First Name:<span class="requiredstar">*</span>
                    </label>
                </div>
                <div class="col40">
                    @Html.TextBoxFor(m => m.FirstName, new { @class = "required titleTxt", maxlength = "100", @placeholder = "Maximum 100 characters" })
                    @Html.ValidationMessageFor(m => m.FirstName)

                </div>
            </div>
            <div class="row">
                <div class="col20">
                    <label>
                        Last Name:<span class="requiredstar">*</span>
                    </label>
                </div>
                <div class="col40">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "required", maxlength = "100", @placeholder = "Maximum 100 characters" })
                    @Html.ValidationMessageFor(m => m.LastName)
                </div>
            </div>
            <div class="row">
                <div class="col20">
                    <label>
                        Username:<span class="requiredstar">*</span>
                    </label>
                </div>
                <div class="col40">
                    @Html.TextBoxFor(m => m.UserNameTxt, new { @class = "required nospace", maxlength = "50", @placeholder = "Maximum 50 characters" })
                    @Html.ValidationMessageFor(m => m.UserNameTxt, null, new { @id = "UserName" })
                </div>
            </div>
            <div class="row">
                <div class="col20">
                    <label>
                        Password:<span class="requiredstar">*</span>
                    </label>
                </div>
                <div class="col40">
                    @if (Model.UserID == 0)
                    {
                        @Html.PasswordFor(m => m.Password, new { @class = "required nospace", maxlength = "20", @placeholder = "Maximum 20 characters" })
                        @Html.ValidationMessageFor(m => m.Password)
                    }
                    else
                    {

                        @*<input type="button" id="changePass" value="Change Password" class="changepassword" />*@
                        <a id="changePass" href="#" class="changepassword">Change Password</a>
                        <a id="cancelPass" href="@CancelLinkPath" class="changepassword" style="display:none">Cancel</a>
                        <br />
                        @Html.PasswordFor(m => m.ChangedPassword, new { @class = "required common_hide nospace", maxlength = "20", @placeholder = "Maximum 20 characters" })
                        @Html.ValidationMessageFor(m => m.ChangedPassword, null, new { @id = "span_ChangedPasswordTxt" })
                    }

                </div>
            </div>
            <div class="row">
                <div class="col20">
                    <label>
                        Email:<span class="requiredstar">*</span>
                    </label>
                </div>
                <div class="col40">
                    @Html.TextBoxFor(m => m.Email, new { @class = "required email", maxlength = "200", @placeholder = "Maximum 200 characters" })
                    <img src="@Href("~/scripts/Admin/images/tooltip.png")" title="Email should be in the format of abc@xyz.com" class="suggestion" />
                    <div class="mobiletooltip">
                    </div>
                    @Html.ValidationMessageFor(m => m.Email, null, new { @class = "EmailTypeError" })
                </div>
            </div>
            <div class="row">
                <div class="col20">
                    <label>
                        User Type:<span class="requiredstar">*</span>
                    </label>
                </div>
                <div class="col40">
                    @Html.DropDownListFor(m => m.UserRoleID, ViewBag.RolesList as SelectList)
                    @Html.ValidationMessageFor(m => m.UserRoleID)
                </div>
            </div>

            <div class="row dept-users">
                <div class="col20">
                    <label>
                        Department:<span class="requiredstar">*</span>
                    </label>
                </div>
                <div class="col40">
                    @*@Html.ListBox("DepartmentUsers", Model.DepartmentUsersList as IEnumerable<SelectListItem>, new { @class = "required", @selection="multiple" })*@
                    @Html.ListBoxFor(m => m.SelectedDepartment, new SelectList(Model.DepartmentUsersList, "Value", "Text", Model.SelectedDepartment),
                    new { @Id = "lstRightSections" })
                    @Html.ValidationMessageFor(m => m.SelectedDepartment)
                    <span class="field-validation-error err_msg" style="display: none;" id="SelectedDepart">This field is required.</span>
                </div>
            </div>

            <div class="row">
                <div class="col20">
                    <label>
                        Status:<span class="requiredstar">*</span>
                    </label>
                </div>
                <div class="col40">
                    @Html.DropDownList("IsActiveInd", ViewBag.IsActiveInd as SelectList)
                </div>
            </div>

            <div class="row">
                <div class="col20">
                    <label>
                        Date Added:<span class="requiredstar">*</span>
                    </label>
                </div>
                <div class="col40" id="divCreatedDate">
                    @Html.TextBoxFor(m => m.UserCreateDate, new
               {
                   @Value = ViewBag.UserCreateDate,
                   maxlength = "10",
                   @class = "required nospace datepicker dateonly",
                   @readonly = true,
                   @placeholder = "MM/DD/YYYY",
                   @id = "UserCreateDate",
                   ondrop = "return false;",
                   onpaste = "return false;"
               })
                </div>
            </div>

            <div class="row">
                <div class="col20">&nbsp;</div>
                <div class="col40">
                    @Html.HiddenFor(m => m.UserID)
                    @Html.HiddenFor(m => m.CreateDate)
                    @Html.HiddenFor(m => m.Status)
                    <input type="submit" value="@ViewBag.Submit" id="btnsubmit"
                           class="submit-btn submit CreateInner" />

                    <input type="submit" id="btnCancel" name="command" value="Cancel"
                           class="cancel cancel-btn" />
                    <input type="hidden" value="" name="hdnCreateDate" id="hdnCreateDate" />

                </div>
            </div>
        </div>
    </div>
    <div class="fancybox-overlay fancybox-overlay-fixed" style="width: auto; height: auto; display: none;" id="uploaderprocess">
    </div>
    <div class="customprogressbar" style="display: none;">
        <div></div>
    </div>
    @*Div for blocking the user untill the page is not fully loaded.*@
    <div id="div" style="position: fixed; bottom: 0; height: 100%; width: 100%; left: 0; right: 0; top: 0; opacity: 0.5; background-color: #000; color: #fff; z-index: 9999;">
    </div>
}

<script src="~/Scripts/js/jquery-1.10.2.js" type="text/javascript"></script>
<script src="~/Scripts//js/jquery-ui-1.11.2.min.js"></script>
<script src="~/Scripts/js/jquery.validate.js" type="text/javascript"></script>
<script src="~/Scripts/js/jquery.validate.unobtrusive.js" type="text/javascript"></script>
@*<script src="~/Scripts/js/additional-methods.js"></script>*@

<script type="text/javascript">
    // code for blocking the user untill the page is not fully loaded.
    $(document).ready(function () {
        $("#div").fadeOut();
        var UserTypeID = '@UserTypeID';
        if (UserTypeID == 3) {
            $(".dept-users").css({ "display": "block" });
        }
        else {
            $(".dept-users").css({ "display": "none" });
        }

        //From EMail Validation
        $('#usertype').change(function () {
            var usertype = $("#usertype option:selected").index()
            if (usertype == 0) {
                $("#usertypespan").css({ "display": "block" })
                $("#usertype").addClass("input-validation-error")
            }
            else {
                $("#usertypespan").css({ "display": "none" })
                $("#usertype").removeClass("input-validation-error")
            }
        });

        $('#UserRoleID').change(function () {
            var UserRoleID = $("#UserRoleID option:selected").val();
            if (UserRoleID == 3) {
                $(".dept-users").css({ "display": "block" });
            }
            else {
                $(".dept-users").css({ "display": "none" });
            }
        });
    });


    $(function () {

        var $ = jQuery.noConflict();
        @*var ListingType = '@ListingType';*@

        $.fn.scrollView = function () {
            return this.each(function () {
                $('html, body').animate({
                    scrollTop: $(this).offset().top
                }, 1000);
            });
        }
        $('#changePass').click(function () {

            $('#cancelPass').show();
            $('#changePass').hide();
            $('#ChangedPassword').show();
            $('#ChangedPassword').focus();

        });

        var nospace = $(".nospace");
        var funcfb = function () {
            $(this).val($(this).val().replace(/\s/g, ''));
        }
        if (nospace != null && nospace.length > 0) {
            nospace.keyup(funcfb).blur(funcfb);
        }

        $('#UserCreateDate').datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: (new Date().getFullYear() - 10).toString() + ':' + (new Date().getFullYear() + 10).toString()
        });
        $('#ankUsers').addClass('select');
        $('#ankUserManagement').addClass('select');
    });

    $("#TitleTxt").focus();
    $("#btnsubmit").click(function () {

        var retfalse = 0;
        var Usertype = $('#UserRoleID').val();
        var selhall = $("#lstRightSections option:selected").index();
        if (Usertype != "3") {
            if (selhall == 0) {
                $("#lstRightSections").addClass("input-validation-error");
                $("#SelectedDepart").css({ "display": "block" });
                retfalse = 1;
            }
            else {
                $("#SelectedDepart").css({ "display": "none" });
                $("#lstRightSections").removeClass("input-validation-error");
            }
        }
        if ($("#form1").valid()) {
            if (retfalse == 1) {
                return false;
            }
        }

    });
</script>
@*@Html.Partial("_CropPartial")*@
