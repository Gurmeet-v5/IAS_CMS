@using KISD.Areas.Admin.Models;
@using MvcContrib.UI.Grid;
@using NewsEventTypeAlias = KISD.Areas.Admin.Models.GalleryListingService.TypeMaster;
@model PagedViewModel<NewsEventModel>
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var message = TempData["AlertMessage"] ?? string.Empty;
    var alertmessage = TempData["Message"] ?? string.Empty;
    var pager = TempData["pager"] ?? string.Empty;
    string Listingtype = Convert.ToString(ViewBag.ImageTypeId) ?? string.Empty;
    var TypeMasterID = Request.QueryString["mt"] != null ? Request.QueryString["mt"].ToString() : EncryptDecrypt.Encrypt("0");
    var type = EncryptDecrypt.Decrypt(TypeMasterID);
    var SortColumn = Request.QueryString["Column"] != null ? Request.QueryString["Column"].ToString() : "EventCreateDate";
    var SortDirection = Request.QueryString["Direction"] != null ? Request.QueryString["Direction"].ToString() : "Descending";
    var Pagesize = Request.QueryString["pagesize"] != null ? Request.QueryString["pagesize"].ToString() : Common._pageSize.ToString();
    var PagerID = Request.QueryString["page"] != null ? Request.QueryString["page"].ToString() : Common._currentPage.ToString();
    var AppPath = (Request.IsSecureConnection ? "https://" : "http://") + (HttpContext.Current.Request.Url.DnsSafeHost) + (HttpContext.Current.Request.IsLocal ? (":" + HttpContext.Current.Request.Url.Port.ToString()) : "")
                   + "/Admin/NewsEvent/Index?mt=" + TypeMasterID + "&page=1&Column=" + SortColumn + "&Direction=" + SortDirection + "&pagesize=";
    AppPath = Common.ReturnValidPath(AppPath);
}

@using (Html.BeginForm("Index", "NewsEvent",
                        new
                        {
                            mt = TypeMasterID,
                            pagesize = Pagesize,
                            page = PagerID,
                            Column = SortColumn,
                            Direction = SortDirection

                        },
                         FormMethod.Post, new { id = "form1", name = "form1" }))
{
    <div class="breadcrumb">
        <ul>
            <li>
                <i class="icon-th"></i>
                <a id="ankdahboard" href='@Url.Action("Index", "Home")'>Dashboard</a>
            </li>
@if (Convert.ToInt32(EncryptDecrypt.Decrypt(TypeMasterID)) == Convert.ToInt32(NewsEventTypeAlias.ManageEvents))
{
            <li>
                <a id="ankbacktoMasterListing" href='@Url.Action("DepartmentListing", "Department", new
                                                {
                                                    pagesize = Request.QueryString["mpagesize"] ?? "10",
                                                    page = Request.QueryString["mpage"] ?? "1",
                                                    Column = Request.QueryString["mColumn"] ?? "DepartmentCreateDate",
                                                    Direction = Request.QueryString["mDirection"] ?? "Descending"
                                                })'>
                    Department Listing
                </a>
            </li>
}
            <li>
                @Html.Raw(Convert.ToString(@ViewBag.PageTitle)) Listing
            </li>
        </ul>
    </div>
    <div class="wrapper">
        <!-- Wrapper -->
        <div class="widget">
            <!-- widget -->
            <div class="widget-header">
                <!-- widget-header -->
                <h4>
                    <i class="icon-reorder"></i>
                    @Html.Raw(Convert.ToString(@ViewBag.PageTitle)) Listing
                </h4>
                <div class="btn-group">
@if (Convert.ToInt32(EncryptDecrypt.Decrypt(TypeMasterID)) == Convert.ToInt32(NewsEventTypeAlias.ManageEvents))
{
                    <a href='@Url.Action("ImportEvents", "NewsEvent"
, new
{
    mt = TypeMasterID,
    nid = EncryptDecrypt.Encrypt("0"),
    pid = Request.QueryString["pid"] != null ? Request.QueryString["pid"].ToString() : EncryptDecrypt.Encrypt("0"),
    pagesize = Pagesize,
    page = PagerID,
    Column = SortColumn,
    Direction = SortDirection
}
)
                        '>
                        <i class="icon-plus"></i>Import
                    </a>
}
                    <a href='@Url.Action("Create", "NewsEvent"
, new
{
    mt = TypeMasterID,
    nid = EncryptDecrypt.Encrypt("0"),
    pid = Request.QueryString["pid"] != null ? Request.QueryString["pid"].ToString() : EncryptDecrypt.Encrypt("0"),
    pagesize = Pagesize,
    page = PagerID,
    Column = SortColumn,
    Direction = SortDirection
}
)
                        '>
                        <i class="icon-plus"></i>Add
                    </a>
                    @if (Convert.ToInt32(EncryptDecrypt.Decrypt(TypeMasterID)) == Convert.ToInt32(NewsEventTypeAlias.ManageEvents))
                    {
                    <a id="ankback" href='@Url.Action("DepartmentListing", "Department", new
                                     {
                                         pagesize = Pagesize,
                                         page = PagerID,
                                         Column = SortColumn,
                                         Direction = SortDirection
                                     })'>
                        <i class="icon-arrow-left"></i>Back
                    </a>
                    }
                </div>
            </div>
            @if (Convert.ToInt32(EncryptDecrypt.Decrypt(TypeMasterID)) != Convert.ToInt32(NewsEventTypeAlias.ManageEvents))
            {
            <div class="row">
                <div class="search_report">
                    <div class="col20">
                        <label>
                            <b>@Html.Raw(Convert.ToString(@ViewBag.PageTitle)) Title:</b>
                        </label>
                        <br />
                        @Html.TextBoxFor(m => m.Title, new { @class = "", maxlength = "100" })
                        <br />
                    </div>
                    @if (Convert.ToInt32(EncryptDecrypt.Decrypt(TypeMasterID)) == Convert.ToInt32(NewsEventTypeAlias.Events))
                    {
                    <div class="col20">
                        <label>
                            <b>Event Date:</b>
                        </label>
                        <br />
                        @Html.TextBoxFor(m => m.strDate, new { @class = "nospace datepicker ", maxlength = "10", @readonly = true, @placeholder = "mm/dd/yyyy", ondrop = "return false;", onpaste = "return false;" })
                        <br />
                    </div>
                    }
                    <div class="col20">
                        <label>
                            <b>Display Start Date:</b>
                        </label>
                        <br />
                        @Html.TextBoxFor(m => m.strFromDate, new { @class = "nospace datepicker ", maxlength = "10", @readonly = true, @placeholder = "mm/dd/yyyy", ondrop = "return false;", onpaste = "return false;" })
                        <br />
                    </div>
                    <div class="col20">
                        <label>
                            <b>Display End Date:</b>
                        </label>
                        <br />

                        @Html.TextBoxFor(m => m.strToDate, new { @class = "nospace datepicker ", maxlength = "10", @readonly = true, @placeholder = "mm/dd/yyyy", ondrop = "return false;", onpaste = "return false;" })
                        <br />
                    </div>
                    <div class="col20">
                        <label>
                            <b>Date Added:</b>
                        </label>
                        <br />

                        @Html.TextBoxFor(m => m.strCreateDate, new { @class = "nospace datepicker ", maxlength = "10", @readonly = true, @placeholder = "mm/dd/yyyy", ondrop = "return false;", onpaste = "return false;" })
                        <br />
                    </div>
                       <div class="col20">
                        <label><b>Status:</b></label>
                        <br />
                        @{var list = new SelectList(new[]
                                    {
                        new { ID = "All", Name = "All" },
                        new { ID = "True", Name = "Active" },
                        new { ID = "False", Name = "Inactive" },
                        },
                                    "ID", "Name", 2);
                        }
                        @Html.DropDownList("status", list, new { })
                        <br />
                    </div></div>
                    <div class="search-btn-container-center">
                                                <input type="submit" value="Search" name="search" id="btnsearch" onclick="return checkdate();" class="submit-btn submit" />
                        <input type="submit" id="btnCancel" name="command" value="Cancel" class="cancel cancel-btn" />
                    </div>
               
            </div>
                            }
            @*Calling Partial View For Ajax Call backs or Postback*@
            @Html.Partial("NewsEventPartial", Model)
        </div>
    </div>

    @Html.Hidden("returnUrl", this.Request.RawUrl)

    <input type="hidden" name="hdncheckboxselected" id="hdncheckboxselected" value="" />
    <input type="hidden" name="hdnvalue" id="hdnvalue" value="" />
}
<script src="~/Scripts/js/jquery-1.10.2.js"></script>
<script type="text/javascript">
    // code for blocking the user untill the page is not fully loaded.
    $(document).ready(function () {
        $("#div").fadeOut();
    });
</script>
<script type="text/javascript">
    //.. for pager dropdown selectedvalue
    var type = '@EncryptDecrypt.Decrypt(TypeMasterID)';
    if (type == "8") {
        $("#ankMasters").addClass('select');
        $('#ankDailyNews').addClass('select');
        $('#ankDailyNewsListing').addClass('select');
    }
    else if (type == "9") {
        $('#ankMasters').addClass('select');
        $('#ankDownloads').addClass('select');
        $('#ankDownloadsListing').addClass('select');
    }
    else if (type == "18") {
        $('#ankDepartments').addClass('select');
        $('#ankDepartmentsListing').addClass('select');
    }
    function checkdate() {
        var fromdate = $("#strFromDate").val();
        var todate = $("#strToDate").val();
        if (fromdate == "" && todate != "") {
            alert("Please enter Display Start Date.");
            return false;
        }
        else if (fromdate != "" && todate == "") {
            alert("Please enter Display End Date.");
            return false;
        }
        if (new Date(todate) < new Date(fromdate)) {
            alert("Display End Date & Time should be greater than Display Start Date & Time.");
            return false;
        }
    };
    $('#btnCancel').click(function () {
        $("#strFromDate").val('');
        $("#strToDate").val('');
        $("#Title").val('');
        $("#strCreateDate").val('');
        $("#status").prop('selectedIndex', 0);
        if (type == "9") {
            $("#strDate").val('');
        }
    });
</script>
<script src="~/Scripts/js/footable.js" type="text/javascript"></script>
<script>
    $(function () {
        $('table').footable();
    });
</script>
<script src="~/Scripts/js/jquery-ui-1.11.2.min.js"></script>
<script type="text/javascript">
    $(function () {
        $('.datepicker').datepicker(
            {
                changeMonth: true,
                changeYear: true,
                yearRange: (new Date().getFullYear() - 10).toString() + ':' + (new Date().getFullYear() + 10).toString()
            });
    });
</script>