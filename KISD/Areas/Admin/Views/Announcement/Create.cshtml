@using System.Web.Mvc;
@using KISD.Areas.Admin.Models;
@using AnnouncementTypeAlias = KISD.Areas.Admin.Models.GalleryListingService.TypeMaster;
@model AnnouncementModel
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    string mastertype = Convert.ToString(ViewBag.TypeMasterID) ?? string.Empty;
    var AlertTitle = TempData["Message"] ?? string.Empty;
    var AnnouncementID = Request.QueryString["iid"].ToString() ?? EncryptDecrypt.Encrypt("0");
    var MasterTypeID = Request.QueryString["it"].ToString() ?? EncryptDecrypt.Encrypt("0");
    var PageSize = Request.QueryString["pagesize"] != null ? Request.QueryString["pagesize"].ToString() : Common._pageSize.ToString();
    var Page = Request.QueryString["page"] != null ? Request.QueryString["page"].ToString() : Common._currentPage.ToString();
    var Column = Request.QueryString["Column"] != null ? Request.QueryString["Column"].ToString() : "AnnouncementCreateDate";
    var Direction = Request.QueryString["Direction"] != null ? Request.QueryString["Direction"].ToString() : "Ascending";
}

@using (Html.BeginForm("Create", "Announcement",
                                                                                       new
                                                                                       {
                                                                                           it = MasterTypeID,
                                                                                           iid = AnnouncementID,
                                                                                           pagesize = PageSize,
                                                                                           page = Page,
                                                                                           Column = Column,
                                                                                           Direction = Direction,
                                                                                       },
                                                                                        FormMethod.Post, new { id = "form1", name = "form1", enctype = "multipart/form-data" }))
{
    <div class="breadcrumb">
        <!-- Breadcrumb -->
        <ul>
            <li>
                <i class="icon-th"></i>
                <a id="ankdahboard" href='@Url.Action("Index", "Home")'>Dashboard</a>
            </li>
            <li>
                <a id="ankMasterListing" href='@Url.Action("Index", "Announcement",
                     new
                     {
                         it = MasterTypeID,
                         pagesize = PageSize,
                         page = Page,
                         Column = Column,
                         Direction = Direction,
                     }
                         )'>

                    <text>
                        @ViewBag.AnnouncementTypeTitle
                    </text>
                </a>
            </li>
            <li>
                @if (EncryptDecrypt.Decrypt(AnnouncementID) != "0")
                {
                    {<text>@Model.TitleTxt - </text> }
                }
                @ViewBag.PageTitle
            </li>
        </ul>
    </div>
    <div class="wrapper">
        <!-- Wrapper -->
        <div class="widget">
            <!-- widget -->
            <div class="widget-header">
                <!-- widget-header -->
                <h4>
                    <i class="icon-reorder"></i>@ViewBag.PageTitle
                </h4>

                <div class="btn-group">
                    <a id="ankback" href='@Url.Action("Index", "Announcement",
                     new
                     {
                         it = MasterTypeID,
                         pagesize = PageSize,
                         page = Page,
                         Column = Column,
                         Direction = Direction,
                     }
                )'>
                        <i class="icon-arrow-left"></i>Back
                    </a>
                </div>
            </div>
@if (Convert.ToInt32(mastertype) == Convert.ToInt32(AnnouncementTypeAlias.Announcement) || Convert.ToInt32(mastertype) == Convert.ToInt32(AnnouncementTypeAlias.BoardSchedule))
{
    <div class="row">
        <div class="col20">
            <label>
                Title:<span class="requiredstar">*</span>
            </label>
        </div>
        <div class="col40">
            @Html.TextBoxFor(m => m.TitleTxt, new { @class = "required titleTxt", maxlength = "100", @placeholder = "Maximum 100 characters" })
            @Html.ValidationMessageFor(m => m.TitleTxt, null, new { @class = "valUsername" })
        </div>
    </div>
}
@if (Convert.ToInt32(mastertype) == Convert.ToInt32(AnnouncementTypeAlias.OnscreenAlert))
{
    <div class="row">
        <div class="col20">
            <label>
                Alert Message:<span class="requiredstar">*</span>
            </label>
        </div>
        <div class="col40">
            @Html.TextAreaFor(m => m.TitleTxt, new { @class = "required titleTxt", maxlength = "200", @placeholder = "Maximum 200 characters" })
            @Html.ValidationMessageFor(m => m.TitleTxt, null, new { @class = "valUsername" })
        </div>
    </div>
}            
@if (Convert.ToInt32(mastertype) == Convert.ToInt32(AnnouncementTypeAlias.Announcement))
{
            <div class="row dvimage" id="dvimage">
                <div class="col20">
                    <label>
                        Upload Image:<span class="requiredstar">*</span>
                    </label>
                </div>
                <div class="col40">
                    <input type="file" value="" accept=".jpg,.jpeg,.png,.gif"
                           @if (Model != null && !string.IsNullOrEmpty(Model.ImageURLTxt))
                           { <text> class="cropedfileupload" name="imageupload" id="imageupload" </text>              }
                           else
                           { <text> class="fileinput required cropedfileupload" id="ImagePathTxt" name="ImagePathTxt" </text>                                     
                           } />
                    <span class="fontsize">
                        
                            <text>Ideal image size is 335px * 140px.Only JPG/ JPEG/ GIF/ PNG files are allowed and maximum image size is 4 MB.</text>
                        
                       
                    </span>
                    <span class="field-validation-error" style="display: none;" id="input_file_upload_error_img"></span>
                    <span class="field-validation-error" style="display: none;" id="input_file_upload_error_img1">This field is required.</span>                    
                    <br />
                    @if (Model != null && !string.IsNullOrEmpty(Model.ImageURLTxt))
                    {
                        <div id="modelimage">
                            @Html.Raw(string.Format("<text><img src=\"{0}\" alt=\"Image\" height=\"60px\"  width=\"100px\" /></text>", Url.Content(@Href(Model.ImageURLTxt).Replace("images", "thumbnails"))))
                        </div>

                    }
                </div>
            </div>
            <div class="row">
                <div class="col20">
                    <label>
                        Alt Image Text:<span class="requiredstar">*</span>
                    </label>
                </div>
                <div class="col40">
                    @Html.TextBoxFor(m => m.AltImageTxt, new { @class = "required", maxlength = "1000", @placeholder = "Maximum 1000 characters" })
                    @Html.ValidationMessageFor(m => m.AltImageTxt)
                </div>
            </div>
}
            @if (Convert.ToInt32(mastertype) == Convert.ToInt32(AnnouncementTypeAlias.BoardSchedule))
            {

                <div class="row">
                    <div class="col20">
                        <label>
                            Schedule Date:<span class="requiredstar">*</span>
                        </label>
                    </div>
                    <div class="col40" id="divCreatedDate">
                        @Html.TextBoxFor(m => m.ScheduleDateTime, new
                   {
                       @Value = ViewBag.ScheduleDateStr,
                       maxlength = "10",
                       @class = "nospace datepicker dateonly",
                       @placeholder = "MM/DD/YYYY",
                       @id = "ScheduleDateStr",
                       ondrop = "return false;",
                       onpaste = "return false;"
                   })
                    </div>
                </div>
                <div class="row">
                    <div class="col20">
                        <label>
                            Schedule Time:<span class="requiredstar">*</span>
                        </label>
                    </div>
                    <div class="col40">
                        @Html.TextBoxFor(m => m.ScheduleTimeTxt, new { @class = "required ", maxlength = "200", @placeholder = "Maximum 200 characters" })
                        @Html.ValidationMessageFor(m => m.ScheduleTimeTxt, null, new { @class = "valUsername" })
                    </div>
                </div>
                <div class="row">
                    <div class="col20">
                        <label>
                            Description:
                        </label>
                    </div>
                    <div class="col40">
                        @Html.TextAreaFor(m => m.DescriptionTxt, new{ @class = "",
                       maxlength = "200",
                       @placeholder = "Maximum 200 characters",
                       id = "DescriptionTxt", name = "DescriptionTxt"
                   })
                    </div>
                </div>
            }  
@if (Convert.ToInt32(mastertype) == Convert.ToInt32(AnnouncementTypeAlias.Announcement))
{
    <div class="row">
        <div class="col20">
            <label>
                Description:
            </label>
        </div>
        <div class="col75">
            @Html.TextAreaFor(m => m.DescriptionTxt,
                new
                {
                    @class = "DescriptionTxt",
                    id = "AbstractTxt",
                    name = "AbstractTxt"
                })
        </div>
    </div>
}
            <div class="row">
                <div class="col20">
                    <label>
                        Display Start Date:
                    </label>
                </div>
                <div class="col40" id="divCreatedDate">
                    @Html.TextBoxFor(m => m.DisplayStartDate, new
               {
                   @Value = ViewBag.StartDateStr,
                   maxlength = "20",
                   @class = "nospace datetimepicker",
                   @placeholder = "MM/DD/YYYY hh:mm",
                   @id = "DisplayStartDate",
                   ondrop = "return false;",
                   onpaste = "return false;"
               })
                    <span id="DisplayStartDatemsg" style="display:none;" class="errors">This field is required.</span>
                </div>
            </div>
            <div class="row">
                <div class="col20">
                    <label>
                        Display End Date:
                    </label>
                </div>
                <div class="col40" id="divCreatedDate">
                    @Html.TextBoxFor(m => m.DisplayEndDate, new
               {
                   @Value = ViewBag.EndDateStr,
                   maxlength = "20",
                   @class = "nospace datetimepicker",
                   @placeholder = "MM/DD/YYYY hh:mm",
                   @id = "DisplayEndDate",
                   ondrop = "return false;",
                   onpaste = "return false;"
               })
                    <span id="spnHome" class="errors"></span>
                    <span id="DisplayEndDatemsg" style="display:none;" class="errors">This field is required.</span>
                </div>
            </div>
            @*<div class="row">
                <div class="col20">
                    &nbsp;
                </div>
                <div class="col40">
                    
                </div>
            </div>*@

            <div class="row">
                <div class="col20">
                    <label>
                        Status:<span class="requiredstar">*</span>
                    </label>
                </div>
                <div class="col40">
                    @Html.DropDownList("StatusInd", ViewBag.StatusInd as SelectList)
                </div>
            </div>

            <div class="row">
                <div class="col20">
                    <label>
                        Date Added:<span class="requiredstar">*</span>
                    </label>
                </div>
                <div class="col40" id="divCreatedDate">
                    @Html.TextBoxFor(m => m.AnnouncementCreateDate, new
               {
                   @Value = ViewBag.AnnouncementCreateDate,
                   maxlength = "10",
                   @class = "nospace datepicker dateonly",
                   @placeholder = "MM/DD/YYYY",
                   @id = "AnnouncementCreateDate",
                   ondrop = "return false;",
                   onpaste = "return false;"
               })
                </div>
            </div>

            <div class="row">
                <div class="col20">&nbsp;</div>
                <div class="col40">
                    <input type="submit" value="@ViewBag.Submit" id="btnsubmit"
                           class="submit-btn submit CreateInner" />

                    <input type="submit" id="btnCancel" name="command" value="Cancel"
                           class="cancel cancel-btn" />
                    <input type="hidden" value="" name="hdnCreateDate" id="hdnCreateDate" />
                    @Html.HiddenFor(m => m.AnnouncementID)
                    @Html.HiddenFor(m => m.TypeMasterID)
                    
                    @if (Convert.ToInt32(mastertype) == Convert.ToInt32(AnnouncementTypeAlias.Announcement))
                    {
                        @Html.HiddenFor(m => m.ImageURLTxt)
                        <input type="hidden" value="140px" id="CropimgHeight">
                        <input type="hidden" value="335px" id="CropimgWidth">
                    }                   
                </div>
            </div>
        </div>
    </div>

    <div class="fancybox-overlay fancybox-overlay-fixed" style="width: auto; height: auto; display: none;" id="uploaderprocess">
    </div>
    <div class="customprogressbar" style="display: none;">
        <div></div>
    </div>
    @*Div for blocking the user untill the page is not fully loaded.*@
                                <div id="div" style="position: fixed; bottom: 0; height: 100%; width: 100%; left: 0; right: 0; top: 0; opacity: 0.5; background-color: #000; color: #fff; z-index: 9999;">
                                </div>
                                }

<script src="~/Scripts/js/jquery-ui-1.11.2.min.js"></script>
<script src="~/Scripts/js/jquery.validate.js" type="text/javascript"></script>
<script src="~/Scripts/js/jquery.validate.unobtrusive.js" type="text/javascript"></script>
<script src="~/Scripts/js/additional-methods.js"></script>
<script src="~/Scripts/js/Fileuploder.js"></script>
<script src="~/Scripts/js/ckeditor/ckeditor.js"></script>
<script type="text/javascript" src="@Href("~/Scripts/js/ckfinder/ckfinder.js")"></script>
<script src="~/Scripts/js/fancybox/jquery.fancybox.js" type="text/javascript"></script>
<link href="~/Scripts/admin/css/jquery.fancybox.css" rel="stylesheet" />
<link href="~/Scripts/admin/css/jquery.datetimepicker.min.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/js/jquery.datetimepicker.full.min.js"></script>

<script type="text/javascript">
    // code for blocking the user untill the page is not fully loaded.
    $(document).ready(function () {
        $("#div").fadeOut()
    });

    var alertmessage = '@AlertTitle';
    if (alertmessage) {
        $('#AnnouncementCreateDate', '#StatusInd').removeClass('input-validation-error');
        alert(alertmessage);
    }


    $(function () {
        if ($("#ckDescriptionTxt").length != 0) {
            var editor = CKEDITOR.replace('ckDescriptionTxt');
            CKFinder.setupCKEditor(editor, { basePath: '@Href("~/Scripts/js/ckfinder/")', rememberLastFolder: false })
            CKEDITOR.config.allowedContent = true;
            CKEDITOR.editorConfig = function (config) {
                config.filebrowserImageUploadUrl = '@Href("~/Scripts/js/ckfinder/core/connector/aspx/connector.aspx?command=QuickUpload&type=Images")';
            };
        }
          @*if ($("#ckDescriptionTxt").length != 0) {
                var editor = CKEDITOR.replace('ckDescriptionTxt');
                CKEDITOR.config.allowedContent = true;
                CKFinder.setupCKEditor(editor, { basePath: '@Href("~/Scripts/js/ckfinder/")', rememberLastFolder: false })
          }*@
        $('.datetimepicker').datetimepicker({
            format: 'm/d/Y h:i A',
            step: 1
        });
        var type = '@mastertype';
        if ($("#AbstractTxt").length != 0) {
            CKEDITOR.replace('AbstractTxt',
                   {
                       toolbar: 'Basic',
                       BasePath: '@Href("~/ckeditor/'")'
            });
        CKEDITOR.config.allowedContent = true;
    }

        $('#AnnouncementCreateDate').datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: (new Date().getFullYear() - 10).toString() + ':' + (new Date().getFullYear() + 10).toString()
        });
        if (type == 14) {
            $("#ankMasters").addClass('select');
            $("#ankAnnouncement").addClass('select');
        }
        else if (type == 7) {
            $("#ankMasters").addClass('select');
            $("#ankOnscreenAlert").addClass('select');
        }
        else if (type == 15) {
            $('#ankContactUsBoard').addClass('select');
            $('#ankBoardMembers').addClass('select');
            $('#ankBoardScheduleListing').addClass('select');
        }
    });
    // code for restrict show multiple error msgs on Image uploading.
    $('#btnsubmit').on('click', function () {
        var retfalse = 0;
        var type = '@mastertype';
        if (type == 14) {

        if ($('.cropedfileupload').val() == '' && ('@Model.ImageURLTxt' == '' || '@Model.ImageURLTxt' == null)) {
            $('#input_file_upload_error_img1').show();
            retfalse = 1;
        }
        else {
            $('#input_file_upload_error_img1').hide();
        }
            $('#input_file_upload_error_img').hide();
        }
        var h_start_time = $('#DisplayStartDate').val();
        var h_end_time = $('#DisplayEndDate').val();

        if (h_start_time != '' && h_end_time != '') {
            $('#DisplayEndDatemsg').css({ 'display': 'none' });
            $('#DisplayStartDatemsg').css({ 'display': 'none' });
            if (new Date(h_start_time) >= new Date(h_end_time)) {
                $('#spnHome').text('Display End Date & Time should be greater than Display Start Date & Time.');
                retfalse = 1;
            }
            else {
                $('#spnHome').text('');
            }
        }
        else {
            $('#spnHome').text('');
            if (h_start_time == '' && h_end_time != '') {
                retfalse = 1;
                $('#DisplayStartDatemsg').css({ 'display': 'block' });
                $('#DisplayEndDatemsg').css({ 'display': 'none' });
            }
            else if (h_end_time == '' && h_start_time != '') {
                retfalse = 1;
                $('#DisplayEndDatemsg').css({ 'display': 'block' });
                $('#DisplayStartDatemsg').css({ 'display': 'none' });
            }
        }
        if ($("#form1").valid()) {
            if (retfalse == 1) {
                return false;
            }
        }
    });
    $(function () {
        $('.datepicker').datepicker(
            {
                changeMonth: true,
                changeYear: true,
                yearRange: (new Date().getFullYear() - 118).toString() + ':' + (new Date().getFullYear() + 10).toString()
            });
    });
    $("#TitleTxt").focus();
    $('#AnnouncementCreateDate','#StatusInd').removeClass('input-validation-error');
</script>
@Html.Partial("_CropPartial")
    <script>
        CKEDITOR.env.isCompatible = true;
    </script>
