@model KISD.Areas.Admin.Models.ContentModel
@using KISD.Areas.Admin.Models;
@{
    var contentID = Request.QueryString["cid"] != null ? Request.QueryString["cid"].ToString() : EncryptDecrypt.Encrypt("0");
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var MenuType = Request.QueryString["mt"] != null ? Request.QueryString["mt"] : EncryptDecrypt.Encrypt("0");
    var Menu = ViewBag.Menu != null ? ViewBag.Menu : 0;
    var PageSize = Request.QueryString["pagesize"] ?? "10";
    var Page = Request.QueryString["page"] ?? "1";
    var Column = Request.QueryString["Column"] ?? "PageTitleTxt";
    var Direction = Request.QueryString["Direction"] ?? "Ascending";
    var AppPath = (Request.IsSecureConnection ? "https://" : "http://") + (HttpContext.Current.Request.Url.DnsSafeHost) + (HttpContext.Current.Request.IsLocal ?
   (":" + HttpContext.Current.Request.Url.Port.ToString()) : "") + "/Admin/";
    AppPath = Common.ReturnValidPath(AppPath);
    var menutypeid = Convert.ToInt32(EncryptDecrypt.Decrypt(MenuType));
}
@using ContentTypeAlias = KISD.Areas.Admin.Models.ContentType;

@using (Html.BeginForm("DepartmentContent", "Department", new
{
    did = Request.QueryString["did"] ?? EncryptDecrypt.Encrypt("0"),
    cid = contentID,
    mt = MenuType,
    pagesize = PageSize,
    page = Page,
    Column = Column,
    Direction = Direction
},
                FormMethod.Post, new { id = "form1", name = "form1", enctype = "multipart/form-data" }))
{
    <div class="breadcrumb">
        <!-- Breadcrumb -->
        <ul>
            <li>
                <i class="icon-th"></i>
                <a id="ankdahboard" href='@Url.Action("Index", "Home")'>Dashboard</a>
            </li>
            <li>
                <a id="ankbacktoMasterListing" href='@Url.Action("DepartmentListing", "Department", new
                                                    {
                                                        pagesize = Request.QueryString["mpagesize"] ?? "10",
                                                        page = Request.QueryString["mpage"] ?? "1",
                                                        Column = Request.QueryString["mColumn"] ?? "DepartmentCreateDate",
                                                        Direction = Request.QueryString["mDirection"] ?? "Descending"
                                                    })'>
                    Department Listing
                </a>
            </li>
            <li>
                @if (Convert.ToInt32(EncryptDecrypt.Decrypt(contentID)) != 0)
                {
                    if (menutypeid == Convert.ToInt32(ContentTypeAlias.Fly))
                    { <text> @Model.PageTitleTxt - </text> }//check for fly page
                    else
                    { <text> @Model.MenuTitleTxt - </text> }
                }
                @Html.Label(Model.ContentTypeTitle)
            </li>
        </ul>
    </div>
    <!-- Breadcrumb Ends -->
    <div class="page-header">
        <!-- page-header -->
        <div class="page-title">
        </div>
    </div>
    <div class="wrapper">
        <!-- Wrapper -->
        <div class="widget">
            <!-- widget -->
            <div class="widget-header">
                <!-- widget-header -->
                <h4><i class="icon-reorder"></i>@Model.ContentTypeTitle </h4>
                <div class="btn-group">
                    <a id="ankback" href='@Url.Action("DepartmentListing", "Department", new
                                     {
                                         pagesize = PageSize,
                                         page = Page,
                                         Column = Column,
                                         Direction =Direction
                                     })'>
                        <i class="icon-arrow-left"></i>Back
                    </a>
                </div>
            </div>
            @*@Model.ContentTypeID == @Convert.ToInt64(ContentTypeAlias.HomeMenu)*@
            @if (Model.ContentTypeID == Convert.ToInt64(ContentTypeAlias.DepartmentEvents)
                                         || Model.ContentTypeID == Convert.ToInt64(ContentTypeAlias.DepartmentStaff)
                                        )
            {

                <div class="row tblpagetitle">
                    <div class="col20">
                        <label>
                            Page Title:<span class="requiredstar">*</span>
                        </label>
                    </div>
                    <div class="col40">
                        @Html.TextBoxFor(m => m.PageTitleTxt, new { @class = "required", maxlength = "100", @placeholder = "Maximum 100 characters" })
                        <br />
                        @Html.ValidationMessageFor(m => m.PageTitleTxt)
                    </div>
                </div>
                                    <div class="row tblpagetitle">
                                        <div class="col20">
                                            <label>
                                                Page URL:<span class="requiredstar">*</span>
                                            </label>
                                        </div>
                                        <div class="col40">
                                            @Html.TextBoxFor(m => m.PageURLTxt, new { @class = "required alphanumeric nospace", maxlength = "100", @placeholder = "Maximum 100 characters" })
                                            <br />
                                            @Html.ValidationMessageFor(m => m.PageURLTxt)
                                        </div>
                                    </div>
                                    <div class="row tblexternalLink">
                                        <div class="col20">
                                            <label>
                                                External Link URL:<span class="requiredstar">*</span>
                                            </label>
                                        </div>
                                        <div class="col40">
                                            @Html.TextBoxFor(m => m.ExternalLinkTxt, new { @class = "required url nospace", maxlength = "300", @placeholder = "Maximum 300 characters" })
                                            <img src="~/scripts/Admin/images/tooltip.png" title="URL must be like http://www.abc.com" class="suggestion" />
                                            <div class="mobiletooltip">
                                            </div>
                                            @Html.ValidationMessageFor(m => m.ExternalLinkTxt)
                                        </div>
                                    </div>

                                    <div class="row tblexternalLink">
                                        <div class="col20">
                                            <label>
                                                External Link Target Window:<span class="requiredstar">*</span>
                                            </label>
                                        </div>
                                        <div class="col40">
                                            <div class="select-style">
                                                @{
                                                    var listItemss = new List<SelectListItem>
                        { new SelectListItem { Text = "New", Value = "true" }, new SelectListItem { Text = "Same", Value = "false" } };
                                                }
                                                @Html.DropDownListFor(model => model.ExternalLinkTargetInd, listItemss)

                                            </div>
                                        </div>
                                    </div>

                                                    if (Model.ContentTypeID != Convert.ToInt64(ContentTypeAlias.DepartmentStaff) &&
                                                        Model.ContentTypeID != Convert.ToInt64(ContentTypeAlias.DepartmentEvents))
                                                    {
                                                        <div class="common-fieldset metatitle">
                                                            <span>Right Section</span>
                                                            <div class="row metatitle">
                                                                <div class="col20">
                                                                    <label>
                                                                        Right Section Title:
                                                                    </label>
                                                                </div>
                                                                <div class="col40">
                                                                    @Html.TextBoxFor(m => m.RightSectionTitleTxt, new { maxlength = "100", @placeholder = "Maximum 100 characters" })
                                                                </div>
                                                            </div>

                                                            <div class="row metatitle">
                                                                <div class="col20">
                                                                    <label>
                                                                        Right Section Abstract:
                                                                    </label>
                                                                </div>
                                                                <div class="col40">
                                                                    @Html.TextAreaFor(m => m.RightSectionAbstractTxt, new { maxlength = "200", @placeholder = "Maximum 200 characters" })
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }

                                                    <div class="common-fieldset">
                                                        <span>Banner Image</span>
                                                        <div class="row tblpagetitle dvinnerimage">
                                                            <div class="col20">
                                                                <label>
                                                                    Banner Image:@*<span class="requiredstar">*</span>*@
                                                                </label>
                                                            </div>
                                                            <div class="col40">

                                                                @Html.DropDownListFor(m => m.BannerImageID, ViewBag.InnerImages as SelectList, "--- Select Banner Image ---", new
                                                           { @class = "ddl common-width", onchange = "ddlInnerImagesChange(this.value)" })
                                                                <span id="ImageIDErrmsg" style="color:#C30; font-size:12px; font-family:Arial,sans-serif; display:none;">This field is required.</span>

                                                            </div>
                                                        </div>

                                                        <div class="row tblpagetitle">
                                                            <div class="col20">
                                                                <label>
                                                                    Alt Banner Image Text:
                                                                </label>
                                                            </div>
                                                            <div class="col40">
                                                                @Html.TextBoxFor(m => m.AltBannerImageTxt, new { @class = "common-width", maxlength = "1000", @placeholder = "Maximum 1000 characters" })
                                                                @*@Html.ValidationMessageFor(m => m.AltImageTxt, null, new { @id = "bannerAltImageTxt" })*@
                                                            </div>
                                                        </div>

                                                        <div class="row tblpagetitle">
                                                            <div class="col20">
                                                                <label>
                                                                    Banner Image Abstract:
                                                                </label>
                                                            </div>
                                                            <div class="col75" id="tdCkEditor">
                                                                @Html.TextAreaFor(m => m.BannerImageAbstractTxt, new { @class = "AbstractTxt required", id = "AbstractTxtInner", name = "AbstractTxt" })
                                                            </div>
                                                        </div>
                                                    </div>

                                                    if (Model.ContentTypeID != Convert.ToInt64(ContentTypeAlias.DepartmentStaff) &&
                                                        Model.ContentTypeID != Convert.ToInt64(ContentTypeAlias.DepartmentEvents))
                                                    {
                                                        <div class="common-fieldset metatitle">
                                                            <span>Social Sharing</span>
                                                            <div class="row metatitle">
                                                                <div class="col20">
                                                                    <label>
                                                                        Select Social Platform:
                                                                    </label>
                                                                </div>
                                                                <div class="col40">
                                                                    @Html.CheckBoxFor(m => m.IsGooglePlusSharingInd, new { @class = "spn-google" })<span class="spn-google" title="Google Plus"></span>
                                                                    @Html.CheckBoxFor(m => m.IsTwitterSharingInd, new { @class = "spn-twitter" })<span class="spn-twitter" title="Twitter"></span>
                                                                    @Html.CheckBoxFor(m => m.IsFacebookSharingInd, new { @class = "spn-fb" })<span class="spn-fb" title="Facebook"></span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                    <div class="row metatitle">
                                                        <div class="col20">
                                                            <label>
                                                                Description:
                                                            </label>
                                                        </div>
                                                        <div class="col75">
                                                            @Html.TextAreaFor(m => m.DescriptionTxt, new { @class = "ckeditor", @id = "ckDescriptionTxt", htmlEncodeOutput = true })
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="col20">
                                                            <label>
                                                                Status:<span class="requiredstar">*</span>
                                                            </label>
                                                        </div>
                                                        <div class="col40">
                                                            <div class="select-style">
                                                                @Html.DropDownList("IsActiveInd", ViewBag.IsActiveInd as SelectList)
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="col20">
                                                            <label>
                                                                Date Added:<span class="requiredstar">*</span>
                                                            </label>
                                                        </div>
                                                        <div class="col40">
                                                            @Html.TextBoxFor(m => m.strCreateDate, new { @class = "required nospace datepicker ", maxlength = "10", @readonly = true, @placeholder = "mm/dd/yyyy", ondrop = "return false;", onpaste = "return false;" })
                                                            <br />
                                                            @Html.ValidationMessageFor(m => m.strCreateDate)
                                                        </div>
                                                    </div>

                                                    <div class="row metatitle">
                                                        <div class="col20">
                                                            <label>
                                                                Page Meta Title:<span class="requiredstar">*</span>
                                                            </label>
                                                        </div>
                                                        <div class="col40">
                                                            @Html.TextBoxFor(m => m.PageMetaTitleTxt, new { @class = "required", maxlength = "1000", @placeholder = "Maximum 1000 characters" })
                                                            <br />
                                                            @Html.ValidationMessageFor(m => m.PageMetaTitleTxt)
                                                        </div>
                                                    </div>

                                                    <div class="row metatitle">
                                                        <div class="col20">
                                                            <label>
                                                                Meta Description:
                                                            </label>
                                                        </div>
                                                        <div class="col40">
                                                            @Html.TextAreaFor(m => m.PageMetaDescriptionTxt, new { maxlength = "2000", @placeholder = "Maximum 2000 characters" })
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="col20">&nbsp;</div>
                                                        <div class="col40">
                                                            @Html.HiddenFor(m => m.ContentID)
                                                            @Html.HiddenFor(m => m.ContentTypeID)
                                                            @Html.HiddenFor(m => m.ContentTypeTitle)
                                                            <input type="submit" id="btnsubmit" value="@ViewBag.Submit"
                                                                   class="submit-btn submit" />&nbsp;&nbsp;&nbsp;
                                                            <input type="submit" id="btnCancel" name="command" value="Cancel"
                                                                   class="cancel cancel-btn" />
                                                        </div>
                                                    </div>

                                                    // Div for blocking the user untill the page is not fully loaded.
                                                    <div id="div" style="position:fixed; bottom:0; height:100%; width:100%; left:0; right:0; top:0; opacity:0.5; background-color:#000; color:#fff; z-index:9999;">

                                                    </div>
                                                    }
        </div>
    </div>
    <script src="~/Scripts/js/jquery-1.10.2.js" type="text/javascript"></script>
    <script src="~/Scripts/js/jquery.validate.js" type="text/javascript"></script>
    <script src="~/Scripts/js/jquery.validate.unobtrusive.js" type="text/javascript"></script>
    <script src="~/Scripts/js/additional-methods.js" type="text/javascript"></script>
    <script src="@Href(" ~/Scripts/js/ckeditor/ckeditor.js")"></script>
    <script src="@Href(" ~/Scripts/js/custom-validate.js")"></script>
    <script type="text/javascript" src="@Href(" ~/Scripts/js/ckfinder/ckfinder.js")"></script>
    <script type="text/javascript">
        // code for blocking the user untill the page is not fully loaded.
        var menutypeId = '@Convert.ToInt32(EncryptDecrypt.Decrypt(MenuType))';
        $(document).ready(function () {
            $("#div").fadeOut();

            $('#PageTitleTxt').on('change keyup', function () {
                var url = this.value;
                $.ajax({
                    url: '@(Url.Action("CheckURL"))',
                    type: 'POST',
                    data: JSON.stringify({ url: url.replace(/[\W_]/g, '_') }),
                    dataType: 'json',
                    contentType: 'application/json',
                    success: function (data) {
                        if (data != "" || data != null) {
                            $("#PageURLTxt").val(data.toString().toLowerCase());
                        }
                    }
                });
            });
        });
        var isactive = '@Model.IsExternalLinkInd';
        $("#MenuTitleTxt").focus();
        var $ = jQuery.noConflict();

        if (menutypeId == '@Convert.ToInt32(ContentTypeAlias.DepartmentEvents)') {
            $("#ankDepartments").addClass('select');
            $("#ankDepartmentsListing").addClass('select');
        }
        else if (menutypeId == '@Convert.ToInt32(ContentTypeAlias.DepartmentStaff)') {
            $("#ankDepartments").addClass('select');
            $("#ankDepartmentsListing").addClass('select');
        }
        $(document).ready(function () {
            var nospace = $(".nospace");
            var funcfb = function () {
                $(this).val($(this).val().replace(/\s/g, ''));
            }
            if (nospace != null && nospace.length > 0) {
                nospace.keyup(funcfb).blur(funcfb);
            }

            if ($("#ckDescriptionTxt").length != 0) {
                var editor = CKEDITOR.replace('ckDescriptionTxt');
                CKEDITOR.config.allowedContent = true;
                CKFinder.setupCKEditor(editor, { basePath: '@Href("~/Scripts/js/ckfinder/")', rememberLastFolder: false })
            }

            if ($("#ckSidebarDescriptionTxt").length != 0) {
                var editor = CKEDITOR.replace('ckSidebarDescriptionTxt');
                CKFinder.setupCKEditor(editor, { basePath: '@Href("~/Scripts/js/ckfinder/")', rememberLastFolder: false })
                CKEDITOR.config.allowedContent = true;
                CKEDITOR.editorConfig = function (config) {
                    config.filebrowserImageUploadUrl = '@Href("~/Scripts/js/ckfinder/core/connector/aspx/connector.aspx?command=QuickUpload&type=Images")';
                };
            }
            // for mini ck for header and footer for home page
            if ($("#tdCkEditor").length != 0) {
                CKEDITOR.replace('BannerImageAbstractTxt',
                   {
                       toolbar: 'Basic',
                       BasePath: '@Href("~/Scripts/js/ckeditor/'")'
                   });
                CKEDITOR.config.allowedContent = true;
            }

            setform(isactive);
            $('#IsActiveInd').removeClass('input-validation-error');

        });

        function setformOncahnge(isactive) {
            if (isactive == "True" || isactive == "true") {
                $('.tblpagetitle').hide();
                $('.metatitle').hide();
                $('.tblexternalLink').show();
                $('.dvinnerimage').hide();
                $('#ImageIDErrmsg').hide();
                $('.common-fieldset').hide();
            }
            else {
                $('.tblpagetitle').show();
                $('.metatitle').show();
                $('.tblexternalLink').hide();
                $('.dvinnerimage').show();
                $('#ImageIDErrmsg').hide();
                $('.common-fieldset').show();
            }
            $('.field-validation-error').empty();
            $('.input-validation-error').each(function () {
                $(this).removeClass('input-validation-error');
            });
        }

        function setform(isactive) {
            if (isactive == "True" || isactive == "true") {
                $('.tblpagetitle').hide();
                $('.metatitle').hide();
                $('.tblexternalLink').show();
                $('.dvinnerimage').hide();
                $('.common-fieldset').hide();
            }
            else {
                $('.tblpagetitle').show();
                $('.metatitle').show();
                $('.tblexternalLink').hide();
                $('.dvinnerimage').show();
                $('.common-fieldset').show();
            }
        }

        // Set Focus on URLTxt field on Postback
        $(document).ready(function () {
            var urlfocus = '@ViewBag.FocusPageUrl';
            if (urlfocus.toLowerCase() == "true") {
                $("#PageURLTxt").focus();
            }
        });

        function ddlInnerImagesChange(value) {
            if (value == '') {
                CKEDITOR.instances['AbstractTxtInner'].setData('');
                $('#AltBannerImageTxt').val('');
            }
            else {
                $.ajax({
                    url: '@AppPath' + 'Menu/GetDataForInnerImages',
                    data: { ImgId: value },
                    type: 'Get',
                    success: function (result) {
                        CKEDITOR.instances['AbstractTxtInner'].setData(result.AbstractTxt);
                        $("#AltBannerImageTxt").val(result.AltImageTxt);
                        $('#AltImageTxt').removeClass("input-validation-error");
                        $('#bannerAltImageTxt').css({ "display": "none" });
                        return false;
                    },
                    onerror: function () {
                    }
                });
            }
        }
        // Alt banner image txt validation
        $(document).click(function () {
            if ($('#AltImageTxt').val() == '') {
                $('#bannerAltImageTxt').css({ "display": "block" });
            }
        })

    </script>
    <script src="~/Scripts/js/jquery-1.10.2.js" type="text/javascript"></script>
    <script src="~/Scripts/js/jquery-ui-1.11.2.min.js"></script>

    <script type="text/javascript">
        $(function () {
            $('.datepicker').datepicker(
                {
                    changeMonth: true,
                    changeYear: true,
                    yearRange: (new Date().getFullYear() - 10).toString() + ':' + (new Date().getFullYear() + 10).toString()
                });
        });
    </script>
    <script>
        CKEDITOR.env.isCompatible = true;
    </script>
                                                    }
