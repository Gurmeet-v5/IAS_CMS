@using KISD.Areas.Admin.Models;
@model StaffModel
@{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var _sid = Request.QueryString["stid"] != null ? Request.QueryString["stid"] : EncryptDecrypt.Encrypt("0");
    var PageSize = Request.QueryString["pagesize"] ?? "10";
    var TypeMasterID = Request.QueryString["tmi"] != null ? Request.QueryString["tmi"].ToString() : EncryptDecrypt.Encrypt("0");
    var Page = Request.QueryString["page"] ?? "1";
    var Column = Request.QueryString["Column"] ?? "PageTitleTxt";
    var Direction = Request.QueryString["Direction"] ?? "Ascending";
    var AppPath = (Request.IsSecureConnection ? "https://" : "http://") +
                  (HttpContext.Current.Request.Url.DnsSafeHost) + (HttpContext.Current.Request.IsLocal ?
                  (":" + HttpContext.Current.Request.Url.Port.ToString()) : "") + "/Admin/";
    AppPath = Common.ReturnValidPath(AppPath);
}

@using (Html.BeginForm("Create", "Staff", new
{
    stid = _sid,
    pagesize = PageSize,
    page = Page,
    Column = Column,
    Direction = Direction
},
    FormMethod.Post, new { id = "form1", name = "form1", enctype = "multipart/form-data" }))
{
    <div class="breadcrumb">
        <ul>
            <li>
                <i class="icon-th"></i>
                <a id="ankdahboard" href='@Url.Action("Index", "Home")'>Dashboard</a>
            </li>
            <li>
                <a id="ankdahboardli" href='@Url.Action("Index", "Staff")'>@ViewBag.LiTitle</a>
            </li>
            <li>
                @if (Model.StaffID != 0)
                {
                    @Model.FirstNameTxt @Model.LastNameTxt @Html.Raw("-")
                }
                @Html.Raw(Convert.ToString(@ViewBag.PageTitle))
            </li>
        </ul>
    </div>
    <div class="wrapper">
        <!-- Wrapper -->
        <div class="widget">
            <!-- widget -->
            <div class="widget-header">
                <!-- widget-header -->
                <h4>
                    <i class="icon-reorder"></i>
                    @Html.Raw(Convert.ToString(@ViewBag.PageTitle))
                </h4>
                <div class="btn-group">
                    <a href='@Url.Action("Index", "Staff", new
                            {
                                pagesize = Request.QueryString["pagesize"] ?? "10",
                                page = Request.QueryString["page"] ?? "1",
                                Column = Request.QueryString["Column"] ?? "CreateDate",
                                Direction = Request.QueryString["Direction"] ?? "Descending"
                            })'>
                        <i class="icon-arrow-left"></i>Back
                    </a>
                </div>
            </div>

            @if (Model != null)
            {
                <div class="row">
                    <div class="col20">
                        <label>
                            First Name:<span class="requiredstar">*</span>
                        </label>
                    </div>
                    <div class="col40">
                        @Html.TextBoxFor(m => m.FirstNameTxt, new { @class = "required", maxlength = "100", @placeholder = "Maximum 100 characters" })
                        <br />
                        @Html.ValidationMessageFor(m => m.FirstNameTxt)
                    </div>
                </div>
                <div class="row">
                    <div class="col20">
                        <label>
                            Last Name:<span class="requiredstar">*</span>
                        </label>
                    </div>
                    <div class="col40">
                        @Html.TextBoxFor(m => m.LastNameTxt, new { @class = "required", maxlength = "100", @placeholder = "Maximum 100 characters" })
                        <br />
                        @Html.ValidationMessageFor(m => m.LastNameTxt)
                    </div>
                </div>
                <div class="row">
                    <div class="col20">
                        Departments:<span class="requiredstar">*</span>
                    </div>
                    <div class="col40">
                        @Html.ListBoxFor(m => m.SelectedDepartment, new SelectList(Model.DepartmentsList, "Value", "Text", Model.SelectedDepartment),
                          new { @Id = "lstDepartments" })
                        @Html.ValidationMessageFor(m => m.DepartmentsList)
                    </div>
                </div>

                <div class="row">
                    <div class="col20">
                        Sub Departments:<span class="requiredstar">*</span>
                    </div>
                    <div class="col40">
                        @Html.ListBoxFor(m => m.SelectedSubDepartment, new SelectList(Model.SubDepartmentsList, "Value", "Text", Model.SelectedSubDepartment),
                          new { @Id = "lstSubDepartments" })
                        @Html.ValidationMessageFor(m => m.SubDepartmentsList)
                    </div>
                </div>

                <div class="row">
                    <div class="col20">
                        School Category:<span class="requiredstar">*</span>
                    </div>
                    <div class="col40">
                        @Html.DropDownList("SchoolCategoryList", ViewBag.SchoolCategoryList as SelectList, new { @class = "required" })
                    </div>
                </div>

                <div class="row">
                    <div class="col20">
                        School:<span class="requiredstar">*</span>
                    </div>
                    <div class="col40">
                        @Html.DropDownList("SchoolList", ViewBag.SchoolList as SelectList, new { @class = "required" })
                    </div>
                </div>

                <div class="row">
                    <div class="col20">
                        <label>
                            Designation<span class="requiredstar">*</span>
                        </label>
                    </div>
                    <div class="col40">
                        @Html.TextBoxFor(m => m.DesignationTxt, new { @class = "required", maxlength = "200", @placeholder = "Maximum 200 characters" })
                        <br />
                        @Html.ValidationMessageFor(m => m.DesignationTxt)
                    </div>
                </div>

                <div class="row">
                    <div class="col20">
                        <label>
                            Phone Number:<span class="requiredstar">*</span>
                        </label>
                    </div>
                    <div class="col40">
                        @Html.TextBoxFor(m => m.PhoneTxt, new { @class = "required phonenumber", maxlength = "20", @placeholder = "(XXX)-XXX-XXXX" })
                        <br />
                        @Html.ValidationMessageFor(m => m.PhoneTxt)
                    </div>
                </div>

                <div class="row">
                    <div class="col20">
                        <label>
                            Email:<span class="requiredstar">*</span>
                        </label>
                    </div>
                    <div class="col40">
                        @Html.TextBoxFor(m => m.EmailTxt, new { @class = "required email", maxlength = "200", @placeholder = "Maximum 200 characters" })
                        @Html.ValidationMessageFor(m => m.EmailTxt)
                    </div>
                </div>

                <div class="row">
                    <div class="col20">
                        <label>
                            Status:<span class="requiredstar">*</span>
                        </label>
                    </div>
                    <div class="col40">
                        <div class="select-style">
                            @Html.DropDownList("IsActiveInd", ViewBag.IsActiveInd as SelectList)
                        </div>
                    </div>
                </div>

                <div class="row">
                        <div class="col20">
                            <label>
                                Date Added:<span class="requiredstar">*</span>
                            </label>
                        </div>
                        <div class="col40">
                            @Html.TextBoxFor(m => m.strStaffCreateDate, new { @class = "required nospace datepicker", maxlength = "10", @readonly = true, @placeholder = "MM/DD/YYYY", ondrop = "return false;", onpaste = "return false;" })
                            <br />
                            @Html.ValidationMessageFor(m => m.strStaffCreateDate)
                        </div>
                    </div>

                <div class="row">
                            <div class="col20">&nbsp;</div>
                            <div class="col40">

                                @Html.HiddenFor(m => m.StaffID)

                                <input type="submit" value="@ViewBag.Submit" id="btnsubmit"
                                       class="submit-btn submit" />&nbsp;&nbsp;&nbsp;

                                <input type="submit" id="btnCancel" name="command" value="Cancel"
                                       class="cancel cancel-btn" />
                            </div>
                        </div>
            }
        </div>
    </div>
}

<script src="~/Scripts/js/jquery-1.10.2.js" type="text/javascript"></script>
<script src="~/Scripts//js/jquery-ui-1.11.2.min.js"></script>
<script src="~/Scripts/js/jquery.validate.js" type="text/javascript"></script>
<script src="~/Scripts/js/jquery.validate.unobtrusive.js" type="text/javascript"></script>
<script src="~/Scripts/js/additional-methods.js"></script>
<script src="~/Scripts/js/Fileuploder.js"></script>
<script src="~/Scripts/js/fancybox/jquery.fancybox.js" type="text/javascript"></script>
<link href="~/Scripts/admin/css/jquery.fancybox.css" rel="stylesheet" />
<link href="~/Scripts/admin/css/jquery.datetimepicker.min.css" rel="stylesheet" />
<script type="text/javascript" src="~/Scripts/js/jquery.datetimepicker.full.min.js"></script>
<script src="~/scripts/js/jquery.maskedinput.min.js" type="text/javascript"></script>
<script type="text/javascript">
    $("#ankParentStudents").addClass('select');
    $('#ankStaff').addClass('select');
    $('#ankStaffListing').addClass('select');
</script>

<script type="text/javascript">
    $(document).ready(function () {
        var phonenumber = $('.phonenumber');
        if (phonenumber != null && phonenumber.length > 0) {
            $('.phonenumber').mask("(999) 999-9999");
        }
    });
    $(function () {
        $('.datepicker').datepicker(
            {
                changeMonth: true,
                changeYear: true,
                yearRange: (new Date().getFullYear() - 10).toString() + ':' + (new Date().getFullYear() + 10).toString()
            });
    });

    $("#lstDepartments").change(function () {
        var deptIDs = '';
        $('#lstDepartments :selected').each(function (i, selected) {
            deptIDs = deptIDs + $(selected).val() + ",";
        });
        deptIDs = deptIDs.substring(0, deptIDs.length - 1);
        var lstSubDepartments = $("#lstSubDepartments");
        $.ajax({
            url: '@(Url.Action("GetSubDepartments"))',
            type: 'POST',
            data: JSON.stringify({ departmentID: deptIDs }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                if (data != "" || data != null) {
                    $(lstSubDepartments).empty();
                    $.each(data, function () {
                        lstSubDepartments.append($("<option></option>").val(this['Value']).html(this['Text']));
                    });
                }
            }
        });
    });

    $("#SchoolCategoryList").change(function () {
        var _schoolCatID = $(this).val();
        var ddlSchoolList = $("#SchoolList");

        $.ajax({
            url: '@(Url.Action("GetSchool"))',
            type: 'POST',
            data: JSON.stringify({ schoolCatID: _schoolCatID }),
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                if (data != "" || data != null) {
                    $(ddlSchoolList).empty();
                    $.each(data, function () {
                        ddlSchoolList.append($("<option></option>").val(this['Value']).html(this['Text']));
                    });
                }
            }
        });
    });

</script>
