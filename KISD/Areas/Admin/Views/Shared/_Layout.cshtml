@using KISD.Areas.Admin.Models;
@using ContentTypeAlias = KISD.Areas.Admin.Models.ContentType;
@using ModuleTypeAlias = KISD.Areas.Admin.Models.Common.ModuleType;
@using ReportTypeAlias = KISD.Areas.Admin.Models.ReportsModel.ReportType;
@using TypeMasterAlias = KISD.Areas.Admin.Models.GalleryListingService.TypeMaster;

@{
    db_KISDEntities objDB = new db_KISDEntities();
     var userId = objDB.Users.Where(x => x.UserNameTxt == User.Identity.Name).Select(x => x.UserID).FirstOrDefault();
    var RoleID = objDB.UserRoles.Where(x => x.UserID == userId).Select(x => x.RoleID).FirstOrDefault();
    var AccessibleTabs = objDB.UserPermissions.Where(x => x.UserID == userId).Select(x => x.PageID).ToList();
    var IsSuperAdmin = RoleID == Convert.ToInt32(Common.UserType.SuperAdmin) ? true : false;
    var IsAdmin = RoleID == Convert.ToInt32(Common.UserType.Admin) ? true : false;
    var IsDeptUser = RoleID == Convert.ToInt32(Common.UserType.DepartmentUser) ? true : false;
    var IsUser = RoleID == Convert.ToInt32(Common.UserType.User) ? true : false;
    var AboutKISDContent = Convert.ToInt64(ContentTypeAlias.AboutUs);
    var AboutKISDContentID = objDB.Contents.Where(x => x.ContentTypeID == AboutKISDContent).Select(x => x.ContentID).FirstOrDefault();
    var SyllabusContent = Convert.ToInt64(ContentTypeAlias.Syllabus);
    var SyllabusContentID = objDB.Contents.Where(x => x.ContentTypeID == SyllabusContent).Select(x => x.ContentID).FirstOrDefault();

    var NewsContent = Convert.ToInt64(ContentTypeAlias.DailyNews);
    var NewsContentID = objDB.Contents.Where(x => x.ContentTypeID == NewsContent).Select(x => x.ContentID).FirstOrDefault();

    var DownloadsContent = Convert.ToInt64(ContentTypeAlias.Downloads);
    var DownloadsContentID = objDB.Contents.Where(x => x.ContentTypeID == DownloadsContent).Select(x => x.ContentID).FirstOrDefault();

    var VideosContent = Convert.ToInt64(ContentTypeAlias.Video);
    var VideosContentID = objDB.Contents.Where(x => x.ContentTypeID == VideosContent).Select(x => x.ContentID).FirstOrDefault();
    

    if (IsSuperAdmin || IsAdmin)
    {
        AccessibleTabs.Add(1);
    }

    if (IsDeptUser)
    {
        AccessibleTabs.Add(9);
    }
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - Killeen ISD</title>
    <link href="~/scripts/Admin/css/default.css" rel="stylesheet" />
    <link href='http://fonts.googleapis.com/css?family=Open+Sans:400,600,700' rel='stylesheet' type='text/css' />
    <link href='@Href("~/favicon.png")' rel="shortcut icon" type="image/x-icon" />
    <script type="text/javascript" src='@Url.Content("~/Scripts/js/jquery-1.10.2.js")'></script>
    <script type="text/javascript" src='@Url.Content("~/Scripts/js/classie.js")'></script>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css">
</head>
<body>
    <header>
        <!-- header -->
        <div class="meanmenu-reveal">
            <button id="showLeft"></button>
        </div>
        <div class="logo">
            <a id="anklogo" href='@Url.Action("Index", "Home")'>
                <img src="~/scripts/Admin/images/admin-logo.png" />
            </a>
        </div>
        @Html.Partial("_LoginPartial")
    </header>
    <section>
        <div class="success message" id="notifyDiv" style="display: none;">
            <h3 id="notifyMsg"></h3>
        </div>
        <!-- Sidebar -->
        <div class="sidebar" id="divmenu">
            <nav id="cbp-spmenu-s1" class="hidemeanmenu">
                <ul>
                    <li>
                        <a id="ankMainDash" href='@Url.Action("Index", "Home", null)'>
                            <i class="icon-th"></i>Dashboard
                        </a>
                    </li>
                    @foreach (var tab in AccessibleTabs)
                    {
                        if (tab == Convert.ToInt32(ModuleTypeAlias.Images) || IsSuperAdmin || IsAdmin)
                        {
                            <li>
                                <a href="#" id="ankMasterImages"><i class="icon-picture"></i>Manage Images</a>
                                <ul>
                                    <li>
                                        @Html.ActionLink("Home Page Banner Images", "Index", "Image", new { it = EncryptDecrypt.Encrypt("1"), Column = "ImageCreateDate", Direction = "Descending" }, new { id = "ankBannerImages" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("Inner Page Banner Images", "Index", "Image", new { it = EncryptDecrypt.Encrypt("2"), Column = "ImageCreateDate", Direction = "Descending" }, new { id = "ankInnerImages" })
                                    </li>
                                </ul>
                            </li>
                        }

                        if (tab == Convert.ToInt32(ModuleTypeAlias.Email) || IsSuperAdmin || IsAdmin)
                        {
                            <li>
                                <a href="#" id="ankEmails"><i class="icon-reply-all"></i>Email</a>
                                <ul>
                                    <li>
                                        @Html.ActionLink("From Email", "Emails", "Email", new { eid = EncryptDecrypt.Encrypt("0"), et = Convert.ToInt32(EmailService.EmailType.From_Email).ToString() }, new { id = "ankFromEmail" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("To Email", "Emails", "Email", new { eid = EncryptDecrypt.Encrypt("0"), et = Convert.ToInt32(EmailService.EmailType.To_Email).ToString() }, new { id = "ankToEmail" })
                                    </li>
                                </ul>
                            </li>
                        }

                        if (tab == Convert.ToInt32(ModuleTypeAlias.Masters) || IsSuperAdmin || IsAdmin)
                        {
                            <li>
                                <a href="#" id="ankMasters"><i class="fa fa-thumb-tack"></i>Manage Masters</a>
                                <ul>
                                    <li>
                                        @Html.ActionLink("Important Information Images", "Index", "Image", new { it = EncryptDecrypt.Encrypt("3"), Column = "ImageCreateDate", Direction = "Descending" }, new { id = "ankImportantInfoImages" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("Syllabus Icons", "Index", "Image", new { it = EncryptDecrypt.Encrypt("4"), Column = "ImageCreateDate", Direction = "Descending" }, new { id = "ankIcons" })
                                    </li>
                                </ul>
                            </li>
                        }

                        if (tab == Convert.ToInt32(ModuleTypeAlias.Home) || IsSuperAdmin || IsAdmin)
                        {
                            <li>
                                <a href="#" id="ankHome"><i class="icon-home"></i>Home</a>
                                <ul>
                                    <li>
                                        @Html.ActionLink("Content", "Create", "Content", new { ct = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.Home).ToString()) }, new { id = "ankHomeContent" })
                                    </li>
                                    @*<li>
                                            @Html.ActionLink("Home Page Right Section", "Create", "Content", new { ct = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.HomePageRightSection).ToString()) }, new { id = "ankHomeRightSection" })
                                        </li>*@
                                    <li>
                                        @Html.ActionLink("Header", "Create", "Content", new { ct = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.Header).ToString()) }, new { id = "ankHeader" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("Footer", "Create", "Content", new { ct = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.Footer).ToString()) }, new { id = "ankFooter" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("Menu Pages", "MenuListing", "Menu", new { mt = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.HomeMenu).ToString()), smt = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.HomeSubMenu).ToString()), mtid = EncryptDecrypt.Encrypt(Convert.ToInt64(TypeMasterAlias.HomeMenu).ToString()), smtid = EncryptDecrypt.Encrypt(Convert.ToInt64(TypeMasterAlias.HomeSubMenu).ToString()), Column = "ContentCreateDate", Direction = "Descending" }, new { id = "ankHomeMenu" })
                                    </li>
                                </ul>
                            </li>
                        }

                        <li>
                            <a href="#" id="ankSyllabus"><i class="fa fa-bookmark-o" aria-hidden="true"></i>Syllabus</a>
                            <ul>
                                <li>
                                    @Html.ActionLink("Content", "Create", "Content", new { ct = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.Syllabus).ToString()) }, new { id = "ankSyllabusContent" })
                                </li>
                                <li>
                                    @Html.ActionLink("Content Right Section", "RightSectionListing", "RightSection", new { ct = EncryptDecrypt.Encrypt(SyllabusContentID.ToString()), mtid = EncryptDecrypt.Encrypt(Convert.ToInt64(TypeMasterAlias.Syllabus).ToString()), Column = "RightSectionCreateDate", Direction = "Descending" }, new { id = "ankSyllabusContentRightSecton", @class = (SyllabusContentID > 0 ? "" : "disabled_link") })
                                </li>
                                <li>
                                    @Html.ActionLink("Menu Pages", "MenuListing", "Menu", new { mt = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.SyllabusMenu).ToString()), smt = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.SyllabusSubMenu).ToString()), mtid = EncryptDecrypt.Encrypt(Convert.ToInt64(TypeMasterAlias.SyllabusMenu).ToString()), smtid = EncryptDecrypt.Encrypt(Convert.ToInt64(TypeMasterAlias.SyllabusSubMenu).ToString()), Column = "ContentCreateDate", Direction = "Descending" }, new { id = "ankSyllabusMenu" })
                                </li>
                            </ul>
                        </li>

                        <li>
                            <a href="#" id="ankDailyNews"><i class="fa fa-clock-o" aria-hidden="true"></i>Daily News</a>
                            <ul>
                                <li>
                                    @Html.ActionLink("Content", "Create", "Content", new { ct = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.DailyNews).ToString()) }, new { id = "ankDailyNewsContent" })
                                </li>
                                <li>
                                    @Html.ActionLink("Content Right Section", "RightSectionListing", "RightSection", new { ct = EncryptDecrypt.Encrypt(NewsContentID.ToString()), mtid = EncryptDecrypt.Encrypt(Convert.ToInt64(TypeMasterAlias.DailyNews).ToString()), Column = "RightSectionCreateDate", Direction = "Descending" }, new { id = "ankDailyNewsContentRightSecton", @class = (NewsContentID > 0 ? "" : "disabled_link") })
                                </li>
                                <li>
                                    @Html.ActionLink("Listing", "Index", "NewsEvent", new { mt = EncryptDecrypt.Encrypt(Convert.ToInt32(TypeMasterAlias.DailyNews).ToString()), Column = "EventCreateDate", Direction = "Descending" }, new { id = "ankDailyNewsListing" })
                                </li>
                            </ul>
                        </li>

                        <li>
                            <a href="#" id="ankDownloads"><i class="fa fa-download" aria-hidden="true"></i>Downloads</a>
                            <ul>
                                <li>
                                    @Html.ActionLink("Content", "Create", "Content", new { ct = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.Downloads).ToString()) }, new { id = "ankDownloadsContent" })
                                </li>
                                <li>
                                    @Html.ActionLink("Content Right Section", "RightSectionListing", "RightSection", new { ct = EncryptDecrypt.Encrypt(DownloadsContentID.ToString()), mtid = EncryptDecrypt.Encrypt(Convert.ToInt64(TypeMasterAlias.Downloads).ToString()), Column = "RightSectionCreateDate", Direction = "Descending" }, new { id = "ankEventContentRightSecton", @class = (DownloadsContentID > 0 ? "" : "disabled_link") })
                                </li>
                                <li>
                                    @Html.ActionLink("Listing", "Index", "NewsEvent", new { mt = EncryptDecrypt.Encrypt(Convert.ToInt32(TypeMasterAlias.Downloads).ToString()), Column = "EventCreateDate", Direction = "Descending" }, new { id = "ankDownloadsListing" })
                                </li>
                            </ul>
                        </li>

                        <li>
                            <a href="#" id="ankVideo"><i class="fa fa-circle-o-notch" aria-hidden="true"></i>Videos</a>
                            <ul>
                                <li>
                                    @Html.ActionLink("Content", "Create", "Content", new { ct = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.Video).ToString()) }, new { id = "ankVideosContent" })
                                </li>
                                <li>
                                    @Html.ActionLink("Content Right Section", "RightSectionListing", "RightSection", new { ct = EncryptDecrypt.Encrypt(VideosContentID.ToString()), mtid = EncryptDecrypt.Encrypt(Convert.ToInt64(TypeMasterAlias.Video).ToString()), Column = "RightSectionCreateDate", Direction = "Descending" }, new { id = "ankVideoContentRightSecton", @class = (VideosContentID > 0 ? "" : "disabled_link") })
                                </li>
                                <li>
                                    @Html.ActionLink("Listing", "Index", "GalleryListing", new { glid = EncryptDecrypt.Encrypt("0"), glt = EncryptDecrypt.Encrypt(Convert.ToInt64(GalleryListingService.TypeMaster.Video).ToString()) }, new { id = "ankVideos" })
                                </li>
                            </ul>
                        </li>

                        if (tab == Convert.ToInt32(ModuleTypeAlias.AboutUs) || IsSuperAdmin || IsAdmin)
                        {
                            <li>
                                <a href="#" id="ankAboutUs"><i class="fa fa-envelope-o"></i>About Us</a>
                                <ul>
                                    <li>
                                        @Html.ActionLink("Content", "Create", "Content", new { ct = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.AboutUs).ToString()) }, new { id = "ankAboutUsContent" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("Menu Pages", "MenuListing", "Menu", new { mt = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.AboutUsMenu).ToString()), smt = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.AboutUsSubMenu).ToString()), mtid = EncryptDecrypt.Encrypt(Convert.ToInt64(TypeMasterAlias.AboutUsMenu).ToString()), smtid = EncryptDecrypt.Encrypt(Convert.ToInt64(TypeMasterAlias.AboutUsSubMenu).ToString()), Column = "ContentCreateDate", Direction = "Descending" }, new { id = "ankAboutUsMenu" })
                                    </li>
                                </ul>
                            </li>
                        }

                        if (tab == Convert.ToInt32(ModuleTypeAlias.ContactUs) || IsSuperAdmin || IsAdmin)
                        {
                            <li>
                                <a href="#" id="ankContactUs"><i class="fa fa-university"></i>Contact Us</a>
                                <ul>
                                    <li>
                                        @Html.ActionLink("Content", "Create", "Content", new { ct = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.ContactUs).ToString()) }, new { id = "ankContactUsContent" })
                                    </li>
                                    <li>
                                        @Html.ActionLink("Menu Pages", "MenuListing", "Menu", new { mt = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.ContactUs).ToString()), smt = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.ContactUsSubMenu).ToString()), mtid = EncryptDecrypt.Encrypt(Convert.ToInt64(TypeMasterAlias.ContactUsMenu).ToString()), smtid = EncryptDecrypt.Encrypt(Convert.ToInt64(TypeMasterAlias.ContactUsSubMenu).ToString()), Column = "ContentCreateDate", Direction = "Descending" }, new { id = "ankContactUsMenu" })
                                    </li>
                                </ul>
                            </li>
                        }
                        if (tab == Convert.ToInt32(ModuleTypeAlias.Search) || IsSuperAdmin || IsAdmin)
                        {
                            <li>
                                <a href='@Url.Action("Create", "Content", new { ct = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.Search).ToString()) })' id="ankSerach"><i class="fa fa-search"></i>Search Result</a>
                            </li>
                        }

                        if (tab == Convert.ToInt32(ModuleTypeAlias.FlyPages) || IsSuperAdmin || IsAdmin || IsDeptUser)
                        {
                            <li>
                                <a href='@Url.Action("MenuListing", "Menu", new { mt = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.Fly).ToString()), smt = EncryptDecrypt.Encrypt("0"),mtid = EncryptDecrypt.Encrypt(Convert.ToInt64(TypeMasterAlias.Fly).ToString()), Column = "ContentCreateDate", Direction = "Descending" })' id="ankFlyPages"><i class="fa fa-plane"></i>Fly Pages</a>
                            </li>
                        }
                        if (tab == Convert.ToInt32(ModuleTypeAlias.GoogleAnalytic) || IsSuperAdmin || IsAdmin)
                        {
                            <li>
                                <a href='@Url.Action("Create", "Content", new { ct = EncryptDecrypt.Encrypt(Convert.ToInt64(ContentTypeAlias.GenericError).ToString()) })' id="ankGenericError"><i class="fa fa-exclamation-triangle"></i>Generic Error Page</a>
                            </li>
                        }
                    }

                </ul>
            </nav>
        </div>

        <div class="content" id="divContent">
            @RenderBody()
        </div>
    </section>
</body>
</html>

<script>
    $(document).ready(function () {
        $('.message').click(function () {
            $(this).animate({ top: -$(this).outerHeight() }, 500);
            $('#notifyDiv').hide();
        });
        setmenuheight();
        setInterval('setmenuheight()', 1000);
        $(document).ready(function () {
            $('#cbp-spmenu-s1').mouseover(function () {
                $('select').blur();
            });

        });
        $('.suggestion').click(function () {
            if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
                $('.mobiletooltip').html('');
                $('.mobiletooltip').append('<span class="suggestiontitle">' + $(this).attr("title") + '</span>');
            }
            window.setTimeout("RemoveMobileTooltip()", 5000);
        });
    });
    function setmenuheight() {
        var mheight = $('#divmenu').height();
        var cheight = $('#divcontent').height();
        var winheight = $(window).height();
        if (cheight > mheight) {
            var h = (parseFloat(cheight) + 100) + 'px';
            $('#divmenu').height(h);
        }
        else if (winheight > mheight) {
            var h = (parseFloat(winheight)) + 'px';
            $('#divmenu').height(h);
        }
    }

    function RemoveMobileTooltip() {
        $('.mobiletooltip').html('');
    }

    function RemoveFileuploader() {
        $('.cropedfileupload').val('');
    }

    function RentalTypeRemoveFileuploader(name) {
        $('.' + name).val('');
    }

    function showprogress() {
        $('#uploaderprocess').show();
        $('.customprogressbar').show();
    }
    function hideprogress() {
        $('#uploaderprocess').hide();
        $('.customprogressbar').hide();
    }

</script>
<script type="text/javascript" src="@Url.Content("~/Scripts/js/meanmenu.js")"></script>